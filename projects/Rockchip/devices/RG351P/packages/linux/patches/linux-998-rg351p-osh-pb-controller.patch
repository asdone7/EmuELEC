diff --git a/drivers/input/evdev.c b/drivers/input/evdev.c
old mode 100644
new mode 100755
index e9ae3d500a55..8ae44ae359b8
--- a/drivers/input/evdev.c
+++ b/drivers/input/evdev.c
@@ -808,7 +808,7 @@ static int handle_eviocgbit(struct input_dev *dev,
 			    void __user *p, int compat_mode)
 {
 	unsigned long *bits;
-	int len;
+	int len, nr;
 
 	switch (type) {
 
@@ -824,6 +824,32 @@ static int handle_eviocgbit(struct input_dev *dev,
 	default: return -EINVAL;
 	}
 
+	// [RG351P] OpenSimHardware OSH PB Controller
+	if (dev->id.vendor == 0x1209 && dev->id.product == 0x3100) {
+		if (type == EV_KEY) {
+			for (nr = 0; nr < BTN_GAMEPAD; nr++) {
+				clear_bit(nr, bits);
+			}
+			for (nr = BTN_MODE; nr < KEY_MAX; nr++) {
+				clear_bit(nr, bits);
+			}
+		} else if (type == EV_ABS) {
+			for (nr = ABS_THROTTLE; nr <= ABS_BRAKE; nr++) {
+				clear_bit(nr, bits);
+			}
+			for (nr = ABS_HAT1X; nr <= ABS_HAT3Y; nr++) {
+				clear_bit(nr, bits);
+			}
+			dev->absinfo[ABS_Z].minimum = 20;	// Analog1 X
+			dev->absinfo[ABS_Z].maximum = 4000;	
+			dev->absinfo[ABS_RY].minimum = 20;	// Analog2 X
+			dev->absinfo[ABS_RY].maximum = 4000;
+			dev->absinfo[ABS_RX].minimum = 30;	// Analog1 Y
+			dev->absinfo[ABS_RX].maximum = 3600;
+			dev->absinfo[ABS_RZ].minimum = 30;	// Analog2 Y
+			dev->absinfo[ABS_RZ].maximum = 3600;
+		}
+	}
 	return bits_to_user(bits, len, size, p, compat_mode);
 }
 
diff --git a/drivers/input/joydev.c b/drivers/input/joydev.c
old mode 100644
new mode 100755
index 5d11fea3c8ec..e45ac874e7f1
--- a/drivers/input/joydev.c
+++ b/drivers/input/joydev.c
@@ -601,6 +601,12 @@ static long joydev_compat_ioctl(struct file *file,
 		goto out;
 	}
 
+	// [RG351P] OpenSimHardware OSH PB Controller
+	if (!strcmp(joydev->handle.dev->name, "OpenSimHardware OSH PB Controller")) {
+		joydev->nabs = 8;
+		joydev->nkey = 12;
+	}
+
 	switch (cmd) {
 
 	case JS_SET_TIMELIMIT:
@@ -666,6 +672,12 @@ static long joydev_ioctl(struct file *file,
 		goto out;
 	}
 
+	// [RG351P] OpenSimHardware OSH PB Controller
+	if (!strcmp(joydev->handle.dev->name, "OpenSimHardware OSH PB Controller")) {
+		joydev->nabs = 8;
+		joydev->nkey = 12;
+	}
+
 	switch (cmd) {
 
 	case JS_SET_TIMELIMIT:
