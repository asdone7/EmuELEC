diff --git a/drivers/power/rk817_battery.c b/drivers/power/rk817_battery.c
index 57b7620aeafa..35f3246b7a79 100644
--- a/drivers/power/rk817_battery.c
+++ b/drivers/power/rk817_battery.c
@@ -2019,6 +2019,29 @@ static int rk817_bat_get_charge_state(struct rk817_battery_device *battery)
 	return (battery->usb_in || battery->ac_in);
 }
 
+//static int rg351p_battery_skip = 30000;
+static int rg351p_battery_pre_voltage = 5000;
+#define RG351_BAT_MAX_VOLTAGE 3900
+#define RG351_BAT_MIN_VOLTAGE 3300
+static int rk817_battery_rg351p_capacity_get(int voltage,int charge_status)
+{
+	if(rg351p_battery_pre_voltage>=5000){
+		rg351p_battery_pre_voltage = RG351_BAT_MAX_VOLTAGE;
+	}
+	//if(rg351p_battery_skip++ >= 30000){
+		if(voltage<3900 && voltage>3300 && (voltage<rg351p_battery_pre_voltage || charge_status)){
+			rg351p_battery_pre_voltage = voltage;
+		}else if(voltage>=3900){
+			rg351p_battery_pre_voltage = RG351_BAT_MAX_VOLTAGE;
+		}else if(voltage<=3300){
+			rg351p_battery_pre_voltage = RG351_BAT_MIN_VOLTAGE;
+		}
+		//rg351p_battery_skip = 0;
+	//}
+	return (rg351p_battery_pre_voltage-RG351_BAT_MIN_VOLTAGE)/((RG351_BAT_MAX_VOLTAGE-RG351_BAT_MIN_VOLTAGE)/100);
+	
+}
+
 static int rk817_battery_get_property(struct power_supply *psy,
 				      enum power_supply_property psp,
 				      union power_supply_propval *val)
@@ -2037,9 +2060,14 @@ static int rk817_battery_get_property(struct power_supply *psy,
 			val->intval = VIRTUAL_VOLTAGE * 1000;
 		break;
 	case POWER_SUPPLY_PROP_CAPACITY:
+		/*
 		val->intval = (battery->dsoc  + 500) / 1000;
 		if (battery->pdata->bat_mode == MODE_VIRTUAL)
 			val->intval = VIRTUAL_SOC;
+		*/
+		//dev_err(dev, "%d\n",battery->voltage_avg);
+		val->intval = rk817_battery_rg351p_capacity_get(battery->voltage_avg,rk817_bat_get_charge_state(battery));
+		
 		break;
 	case POWER_SUPPLY_PROP_HEALTH:
 		val->intval = POWER_SUPPLY_HEALTH_GOOD;
diff --git a/drivers/video/console/fbcon.c b/drivers/video/console/fbcon.c
index c03c5b9602bb..ccd60d3531ca 100644
--- a/drivers/video/console/fbcon.c
+++ b/drivers/video/console/fbcon.c
@@ -79,7 +79,10 @@
 #include <asm/irq.h>
 
 #include "fbcon.h"
-
+#ifdef __VIB__
+#include <linux/gpio.h>
+#define VIB_EN_GPIO 15
+#endif
 #ifdef FBCONDEBUG
 #  define DPRINTK(fmt, args...) printk(KERN_DEBUG "%s: " fmt, __func__ , ## args)
 #else
@@ -1158,6 +1161,9 @@ static void fbcon_init(struct vc_data *vc, int init)
 	}
 
 	ops->p = &fb_display[fg_console];
+#ifdef __VIB__
+	gpio_direction_output(VIB_EN_GPIO, 0);
+#endif
 }
 
 static void fbcon_free_font(struct display *p, bool freefont)
diff --git a/include/linux/kernel.h b/include/linux/kernel.h
index 05b63a1e9f84..82ef2ea0dba2 100644
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@ -15,6 +15,7 @@
 #include <asm/byteorder.h>
 #include <uapi/linux/kernel.h>
 
+//#define __VIB__//Vibration function
 #define USHRT_MAX	((u16)(~0U))
 #define SHRT_MAX	((s16)(USHRT_MAX>>1))
 #define SHRT_MIN	((s16)(-SHRT_MAX - 1))
