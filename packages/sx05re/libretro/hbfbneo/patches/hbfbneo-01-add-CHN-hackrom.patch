--- a/src/burn/drv/neogeo/d_neogeo.cpp	2022-01-21 20:48:47.395425000 +0800
+++ b/src/burn/drv/neogeo/d_neogeo.cpp	2022-03-07 15:29:04.599250540 +0800
@@ -110,7 +110,7 @@
 	{0x00,	0xFF, 0xFF,	0x00, NULL},
 	{0x01,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x02,	0xFF, 0xFF,	0x86, NULL},
+	{0x02,	0xFF, 0xFF,	0x8f, NULL},
 
 	// DIP 1
 	{0,		0xFE, 0,	2,	  "Setting mode"},
@@ -164,7 +164,7 @@
 	{0x00,	0xFF, 0xFF,	0x00, NULL},
 	{0x01,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x02,	0xFF, 0xFF,	0x86, NULL},
+	{0x02,	0xFF, 0xFF,	0x8f, NULL},
 
 	// DIP 1
 	{0,		0xFE, 0,	2,	  "Setting mode"},
@@ -218,7 +218,7 @@
 	{0x00,	0xFF, 0xFF,	0x00, NULL},
 	{0x01,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x02,	0xFF, 0xFF,	0x86, NULL},
+	{0x02,	0xFF, 0xFF,	0x8f, NULL},
 
 	// DIP 1
 	{0,		0xFE, 0,	2,	  "Setting mode"},
@@ -554,7 +554,7 @@
 	{0x00,	0xFF, 0xFF,	0x00, NULL},
 	{0x01,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x02,	0xFF, 0xFF,	0x80, NULL},
+	{0x02,	0xFF, 0xFF,	0x8f, NULL},
 	{0x03,	0xFF, 0xFF,	0x01, NULL},
 
 	{0,		0xFE, 0,	2,	  "Autofire"},
@@ -586,7 +586,7 @@
 	{0x00,	0xFF, 0xFF,	0x00, NULL},
 	{0x01,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x02,	0xFF, 0xFF,	0x8f, NULL},
+	{0x02,	0xFF, 0xFF,	0x93, NULL},
 	{0x03,	0xFF, 0xFF,	0x02, NULL},
 
 	{0,		0xFE, 0,	2,	  "Autofire"},
@@ -602,7 +602,7 @@
 	{0x00,	0xFF, 0xFF,	0x00, NULL},
 	{0x01,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x02,	0xFF, 0xFF,	0x80, NULL},
+	{0x02,	0xFF, 0xFF,	0x88, NULL},
 	{0x03,	0xFF, 0xFF,	0x01, NULL},
 };
 
@@ -777,7 +777,7 @@
 
 static struct BurnDIPInfo neoFakeDIPList[] = {
 	// default
-	{0x02,	0xFF, 0xFF,	0x80, NULL},
+	{0x02,	0xFF, 0xFF,	0x8f, NULL},
 
 	// Fake DIPs
 	// BIOS
@@ -834,7 +834,7 @@
 	{0x16,	0xF0, 0x00,	0x00, NULL},
 
 	// Defaults
-	{0x00,	0xFF, 0xFF,	0x02, NULL},
+	{0x00,	0xFF, 0xFF,	0x00, NULL},
 
 	// Region
 	{0,		0xFE, 0,	4,	  "Region"},
@@ -864,7 +864,7 @@
 	{0x0D,	0xFF, 0xFF,	0x00, NULL},
 	{0x0E,	0xFF, 0x7F,	0x00, NULL},
 	// Fake DIPs
-	{0x0F,	0xFF, 0xFF,	0x86, NULL},
+	{0x0F,	0xFF, 0xFF,	0x8d, NULL},
 
 	// DIP 1
 	{0,		0xFE, 0,	2,	  "Setting mode"},
@@ -21107,3 +21107,2881 @@
 	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
 	0x1000, 304, 224, 4, 3
-};
+};
+
+//============================================================
+// Add Hack Roms patch
+//============================================================
+
+static INT32 kof99ndInit()
+{
+	nNeoTextROMSize[nNeoActiveSlot] = 0x20000;
+
+	return NeoInit();
+}
+
+static INT32 mslug3ndInit()
+{
+	nNeoTextROMSize[nNeoActiveSlot] = 0x80000;
+
+	return NeoInit();
+}
+
+// Fatal Fury - King of Fighters (Hidden Hack)
+
+static struct BurnRomInfo fatfur1hRomDesc[] = {
+	{ "033-p1h.p1",   0x080000, 0xfc051e1d, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 		/ TC534200
+	{ "033-p2.p2",    0x020000, 0xc473af1c, 1 | BRF_ESS | BRF_PRG }, //  1 					/ TC531024
+
+	{ "033-s1.s1",    0x020000, 0x3c3bdf8c, 2 | BRF_GRA },           //  2 Text layer tiles / TC531000
+
+	{ "033-c1.c1",    0x100000, 0x74317e54, 3 | BRF_GRA },           //  3 Sprite data 		/ TC538200
+	{ "033-c2.c2",    0x100000, 0x5bb952f3, 3 | BRF_GRA },           //  4 					/ TC538200
+	{ "033-c3.c3",    0x100000, 0x9b714a7c, 3 | BRF_GRA },           //  5 					/ TC538200
+	{ "033-c4.c4",    0x100000, 0x9397476a, 3 | BRF_GRA },           //  6 					/ TC538200
+
+	{ "033-m1.m1",    0x020000, 0x5be10ffd, 4 | BRF_ESS | BRF_PRG }, //  7 Z80 code 		/ TC531001
+
+	{ "033-v1.v1",    0x100000, 0x212fd20d, 5 | BRF_SND },           //  8 Sound data 		/ TC538200
+	{ "033-v2.v2",    0x100000, 0xfa2ae47f, 5 | BRF_SND },           //  9 					/ TC538200
+};
+
+STDROMPICKEXT(fatfur1h, fatfur1h, neogeo)
+STD_ROM_FN(fatfur1h)
+
+struct BurnDriver BurnDrvFatFur1h = {
+	"fatfur1h", "fatfury1", "neogeo", NULL, "1992",
+	"Fatal Fury - King of Fighters (Hidden Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_FATFURY,
+	NULL, fatfur1hRomInfo, fatfur1hRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Art of Fighting (Boss Hack)
+
+static struct BurnRomInfo aofbRomDesc[] = {
+	{ "044-p1b.p1",   0x080000, 0x202a60d8, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "044-s1.s1",    0x020000, 0x89903f39, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "044-c1.c1",    0x200000, 0xddab98a7, 3 | BRF_GRA },           //  2 Sprite data
+	{ "044-c2.c2",    0x200000, 0xd8ccd575, 3 | BRF_GRA },           //  3 
+	{ "044-c3.c3",    0x200000, 0x403e898a, 3 | BRF_GRA },           //  4 
+	{ "044-c4.c4",    0x200000, 0x6235fbaa, 3 | BRF_GRA },           //  5 
+
+	{ "044-m1.m1",    0x020000, 0x0987e4bb, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code
+
+	{ "044-v2.v2",    0x200000, 0x3ec632ea, 5 | BRF_SND },           //  7 Sound data
+	{ "044-v4.v4",    0x200000, 0x4b0f8e23, 5 | BRF_SND },           //  8 
+};
+
+STDROMPICKEXT(aofb, aofb, neogeo)
+STD_ROM_FN(aofb)
+
+struct BurnDriver BurnDrvAofb = {
+	"aofb", "aof", "neogeo", NULL, "1992",
+	"Art of Fighting (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPC, GBF_VSFIGHT, 0,
+	NULL, aofbRomInfo, aofbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Art of Fighting (Korean Patch, Boss Hack)
+
+static struct BurnRomInfo aofkRomDesc[] = {
+	{ "044-p1k.p1",   0x080000, 0x4c2e8047, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "044-s1k.s1",   0x020000, 0x6e7c531e, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "044-c1.c1",    0x200000, 0xddab98a7, 3 | BRF_GRA },           //  2 Sprite data
+	{ "044-c2.c2",    0x200000, 0xd8ccd575, 3 | BRF_GRA },           //  3 
+	{ "044-c3.c3",    0x200000, 0x403e898a, 3 | BRF_GRA },           //  4 
+	{ "044-c4.c4",    0x200000, 0x6235fbaa, 3 | BRF_GRA },           //  5 
+
+	{ "044-m1.m1",    0x020000, 0x0987e4bb, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code
+
+	{ "044-v2.v2",    0x200000, 0x3ec632ea, 5 | BRF_SND },           //  7 Sound data
+	{ "044-v4.v4",    0x200000, 0x4b0f8e23, 5 | BRF_SND },           //  8 
+};
+
+STDROMPICKEXT(aofk, aofk, neogeo)
+STD_ROM_FN(aofk)
+
+struct BurnDriver BurnDrvAofk = {
+	"aofk", "aof", "neogeo", NULL, "2016",
+	"Art of Fighting (Korean Patch, Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPC, GBF_VSFIGHT, 0,
+	NULL, aofkRomInfo, aofkRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Samurai Shodown (Boss Hack)
+
+static struct BurnRomInfo samshobRomDesc[] = {
+	{ "045-p1b.p1",   0x100000, 0x8e4310a8, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 		/ TC538200
+	{ "045-pg2.sp2",  0x100000, 0x46745b94, 1 | BRF_ESS | BRF_PRG }, //  1 					/ TC538200
+
+	{ "045-s1.s1",    0x020000, 0x9142a4d3, 2 | BRF_GRA },           //  2 Text layer tiles / TC531000
+
+	{ "045-c1.c1",    0x200000, 0x2e5873a4, 3 | BRF_GRA },           //  3 Sprite data 		/ TC5316200
+	{ "045-c2.c2",    0x200000, 0x04febb10, 3 | BRF_GRA },           //  4 					/ TC5316200
+	{ "045-c3.c3",    0x200000, 0xf3dabd1e, 3 | BRF_GRA },           //  5 					/ TC5316200
+	{ "045-c4.c4",    0x200000, 0x935c62f0, 3 | BRF_GRA },           //  6 					/ TC5316200
+	{ "045-c51.c5",   0x100000, 0x81932894, 3 | BRF_GRA },           //  7 					/ TC538200
+	{ "045-c61.c6",   0x100000, 0xbe30612e, 3 | BRF_GRA },           //  8 					/ TC538200
+
+	{ "045-m1.m1",    0x020000, 0x95170640, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code 		/ TC531001
+
+	{ "045-v1.v1",    0x200000, 0x37f78a9b, 5 | BRF_SND },           // 10 Sound data 		/ TC5316200
+	{ "045-v2.v2",    0x200000, 0x568b20cf, 5 | BRF_SND },           // 11 					/ TC5316200
+};
+
+STDROMPICKEXT(samshob, samshob, neogeo)
+STD_ROM_FN(samshob)
+
+struct BurnDriver BurnDrvSamShob = {
+	"samshob", "samsho", "neogeo", NULL, "1993",
+	"Samurai Shodown (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, samshobRomInfo, samshobRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Fatal Fury 2 (Hidden Hack)
+
+static struct BurnRomInfo fatfur2hRomDesc[] = {
+	{ "047-p1h.p1",   0x100000, 0xb594b7b3, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "047-s1.s1",    0x020000, 0xd7dbbf39, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "047-c1.c1",    0x200000, 0xf72a939e, 3 | BRF_GRA },           //  3 Sprite data
+	{ "047-c2.c2",    0x200000, 0x05119a0d, 3 | BRF_GRA },           //  4 
+	{ "047-c3.c3",    0x200000, 0x01e00738, 3 | BRF_GRA },           //  5 
+	{ "047-c4.c4",    0x200000, 0x9fe27432, 3 | BRF_GRA },           //  6 
+
+	{ "047-m1.m1",    0x020000, 0x820b0ba7, 4 | BRF_ESS | BRF_PRG }, //  7 Z80 code
+
+	{ "047-v1.v1",    0x200000, 0xd9d00784, 5 | BRF_SND },           //  8 Sound data
+	{ "047-v2.v2",    0x200000, 0x2c9a4b33, 5 | BRF_SND },           //  9 
+};
+
+STDROMPICKEXT(fatfur2h, fatfur2h, neogeo)
+STD_ROM_FN(fatfur2h)
+
+struct BurnDriver BurnDrvFatfur2h = {
+	"fatfur2h", "fatfury2", "neogeo", NULL, "1992",
+	"Fatal Fury 2 (Hidden Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPC, GBF_VSFIGHT, FBF_FATFURY,
+	NULL, fatfur2hRomInfo, fatfur2hRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	fatfury2Init, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// World Heroes (Boss Hack)
+
+static struct BurnRomInfo wh1bRomDesc[] = {
+	{ "053-eprb.p1",  0x080000, 0xa7b49883, 1 | BRF_ESS | BRF_PRG }, //  0 68K code / D27C400
+	{ "053-epr.p2",   0x080000, 0x0e33e8a3, 1 | BRF_ESS | BRF_PRG }, //  1 			/ D27C400
+
+	{ "053-s1.s1",    0x020000, 0x8c2c2d6b, 2 | BRF_GRA },           //  2 Text layer tiles / TC531000
+
+	{ "053-c1.c1",    0x200000, 0x85eb5bce, 3 | BRF_GRA },           //  3 Sprite data
+	{ "053-c2.c2",    0x200000, 0xec93b048, 3 | BRF_GRA },           //  4 
+	{ "053-c3.c3",    0x100000, 0x0dd64965, 3 | BRF_GRA },           //  5 
+	{ "053-c4.c4",    0x100000, 0x9270d954, 3 | BRF_GRA },           //  6 
+
+	{ "053-m1.m1",    0x020000, 0x1bd9d04b, 4 | BRF_ESS | BRF_PRG }, //  7 Z80 code / TC54H1000
+
+	{ "053-v2.v2",    0x200000, 0xa68df485, 5 | BRF_SND },           //  8 Sound data
+	{ "053-v4.v4",    0x100000, 0x7bea8f66, 5 | BRF_SND },           //  9 
+};
+
+STDROMPICKEXT(wh1b, wh1b, neogeo)
+STD_ROM_FN(wh1b)
+
+struct BurnDriver BurnDrvwh1b = {
+	"wh1b", "wh1", "neogeo", NULL, "1992",
+	"World Heroes (Boss Hack)\0", "Hack", "Alpha Denshi Co.", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPC, GBF_VSFIGHT, 0,
+	NULL, wh1bRomInfo, wh1bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// The King of Fighters '94 (Korean, Boss Hack)
+
+static struct BurnRomInfo kof94krRomDesc[] = {
+	{ "055-p1kr.p1",  0x200000, 0xb251ced4, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "055-s1.s1",    0x020000, 0x825976c1, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "055-c1kr.c1",  0x200000, 0xbf987727, 3 | BRF_GRA },           //  2 Sprite data
+	{ "055-c2.c2",    0x200000, 0x15e096a7, 3 | BRF_GRA },           //  3 
+	{ "055-c3.c3",    0x200000, 0x54f66254, 3 | BRF_GRA },           //  4 
+	{ "055-c4.c4",    0x200000, 0x0b01765f, 3 | BRF_GRA },           //  5 
+	{ "055-c5.c5",    0x200000, 0xee759363, 3 | BRF_GRA },           //  6 
+	{ "055-c6.c6",    0x200000, 0x498da52c, 3 | BRF_GRA },           //  7 
+	{ "055-c7.c7",    0x200000, 0x62f66888, 3 | BRF_GRA },           //  8 
+	{ "055-c8.c8",    0x200000, 0xfe0a235d, 3 | BRF_GRA },           //  9 
+
+	{ "055-m1.m1",    0x020000, 0xf6e77cf5, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "055-v1.v1",    0x200000, 0x8889596d, 5 | BRF_SND },           // 11 Sound data
+	{ "055-v2.v2",    0x200000, 0x25022b27, 5 | BRF_SND },           // 12 
+	{ "055-v3.v3",    0x200000, 0x83cf32c0, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(kof94kr, kof94kr, neogeo)
+STD_ROM_FN(kof94kr)
+
+struct BurnDriver BurnDrvKof94kr = {
+	"kof94kr", "kof94", "neogeo", NULL, "2006",
+	"The King of Fighters '94 (Korean, Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof94krRomInfo, kof94krRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Art of Fighting 2 (Boss Hack)
+
+static struct BurnRomInfo aof2bRomDesc[] = {
+	{ "056-p1b.p1",   0x100000, 0x3af1e484, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "056-s1.s1",    0x020000, 0x8b02638e, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "056-c1.c1",    0x200000, 0x17b9cbd2, 3 | BRF_GRA },           //  2 Sprite data
+	{ "056-c2.c2",    0x200000, 0x5fd76b67, 3 | BRF_GRA },           //  3 
+	{ "056-c3.c3",    0x200000, 0xd2c88768, 3 | BRF_GRA },           //  4 
+	{ "056-c4.c4",    0x200000, 0xdb39b883, 3 | BRF_GRA },           //  5 
+	{ "056-c5.c5",    0x200000, 0xc3074137, 3 | BRF_GRA },           //  6 
+	{ "056-c6.c6",    0x200000, 0x31de68d3, 3 | BRF_GRA },           //  7 
+	{ "056-c7.c7",    0x200000, 0x3f36df57, 3 | BRF_GRA },           //  8 
+	{ "056-c8.c8",    0x200000, 0xe546d7a8, 3 | BRF_GRA },           //  9 
+
+	{ "056-m1.m1",    0x020000, 0xf27e9d52, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "056-v1.v1",    0x200000, 0x4628fde0, 5 | BRF_SND },           // 11 Sound data
+	{ "056-v2.v2",    0x200000, 0xb710e2f2, 5 | BRF_SND },           // 12 
+	{ "056-v3.v3",    0x100000, 0xd168c301, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(aof2b, aof2b, neogeo)
+STD_ROM_FN(aof2b)
+
+struct BurnDriver BurnDrvAof2b = {
+	"aof2b", "aof2", "neogeo", NULL, "1994",
+	"Art of Fighting 2 (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, aof2bRomInfo, aof2bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// World Heroes 2 (Boss Hack)
+
+static struct BurnRomInfo wh2bRomDesc[] = {
+	{ "057-p1b.p1",   0x200000, 0x6e6a0077, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 		/ TC5316200
+
+	{ "057-s1.s1",    0x020000, 0xfcaeb3a4, 2 | BRF_GRA },           //  1 Text layer tiles / TC531000
+
+	{ "057-c1.c1",    0x200000, 0x21c6bb91, 3 | BRF_GRA },           //  2 Sprite data		/ TC5316200
+	{ "057-c2.c2",    0x200000, 0xa3999925, 3 | BRF_GRA },           //  3 					/ TC5316200
+	{ "057-c3.c3",    0x200000, 0xb725a219, 3 | BRF_GRA },           //  4 					/ TC5316200
+	{ "057-c4.c4",    0x200000, 0x8d96425e, 3 | BRF_GRA },           //  5 					/ TC5316200
+	{ "057-c5.c5",    0x200000, 0xb20354af, 3 | BRF_GRA },           //  6 					/ TC5316200
+	{ "057-c6.c6",    0x200000, 0xb13d1de3, 3 | BRF_GRA },           //  7 					/ TC5316200
+
+	{ "057-m1.m1",    0x020000, 0x8fa3bc77, 4 | BRF_ESS | BRF_PRG }, //  8 Z80 code			/ TC531001
+
+	{ "057-v1.v1",    0x200000, 0x8877e301, 5 | BRF_SND },           //  9 Sound data		/ TC5316200
+	{ "057-v2.v2",    0x200000, 0xc1317ff4, 5 | BRF_SND },           // 10 					/ TC5316200
+};
+
+STDROMPICKEXT(wh2b, wh2b, neogeo)
+STD_ROM_FN(wh2b)
+
+struct BurnDriver BurnDrvwh2b = {
+	"wh2b", "wh2", "neogeo", NULL, "1993",
+	"World Heroes 2 (Boss Hack)\0", "Hack", "ADK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, wh2bRomInfo, wh2bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Fatal Fury Special (Hidden Hack)
+
+static struct BurnRomInfo fatfurshRomDesc[] = {
+	{ "058-p1b.p1",   0x100000, 0x8cd18f7f, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ mask rom TC538200
+	{ "058-p2.sp2",   0x080000, 0xd7c71a6b, 1 | BRF_ESS | BRF_PRG }, //  1 					/ mask rom TC534200
+
+	{ "058-s1.s1",    0x020000, 0x2df03197, 2 | BRF_GRA },           //  2 Text layer tiles / mask rom TC531000
+
+	{ "058-c1.c1",    0x200000, 0x044ab13c, 3 | BRF_GRA },           //  3 Sprite data		/ mask rom TC5316200
+	{ "058-c2.c2",    0x200000, 0x11e6bf96, 3 | BRF_GRA },           //  4 					/ mask rom TC5316200
+	{ "058-c3.c3",    0x200000, 0x6f7938d5, 3 | BRF_GRA },           //  5 					/ mask rom TC5316200
+	{ "058-c4.c4",    0x200000, 0x4ad066ff, 3 | BRF_GRA },           //  6 					/ mask rom TC5316200
+	{ "058-c5.c5",    0x200000, 0x49c5e0bf, 3 | BRF_GRA },           //  7 					/ mask rom TC5316200
+	{ "058-c6.c6",    0x200000, 0x8ff1f43d, 3 | BRF_GRA },           //  8 					/ mask rom TC5316200
+
+	{ "058-m1.m1",    0x020000, 0xccc5186e, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code			/ mask rom TC531001
+
+	{ "058-v1.v1",    0x200000, 0x55d7ce84, 5 | BRF_SND },           // 10 Sound data		/ mask rom TC5316200
+	{ "058-v2.v2",    0x200000, 0xee080b10, 5 | BRF_SND },           // 11 					/ mask rom TC5316200					
+	{ "058-v3.v3",    0x100000, 0xf9eb3d4a, 5 | BRF_SND },           // 12 					/ mask rom TC538200
+};
+
+STDROMPICKEXT(fatfursh, fatfursh, neogeo)
+STD_ROM_FN(fatfursh)
+
+struct BurnDriver BurnDrvFatfursh = {
+	"fatfursh", "fatfursp", "neogeo", NULL, "1993",
+	"Fatal Fury Special (Hidden Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_FATFURY,
+	NULL, fatfurshRomInfo, fatfurshRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Savage Reign (Boss Hack)
+
+static struct BurnRomInfo savagerbRomDesc[] = {
+	{ "059-p1b.p1",   0x200000, 0xe892979a, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ TC5316200
+
+	{ "059-s1.s1",    0x020000, 0xe08978ca, 2 | BRF_GRA },           //  1 Text layer tiles / TC531000
+
+	{ "059-c1.c1",    0x200000, 0x763ba611, 3 | BRF_GRA },           //  2 Sprite data		/ TC5316200
+	{ "059-c2.c2",    0x200000, 0xe05e8ca6, 3 | BRF_GRA },           //  3 					/ TC5316200
+	{ "059-c3.c3",    0x200000, 0x3e4eba4b, 3 | BRF_GRA },           //  4 					/ TC5316200
+	{ "059-c4.c4",    0x200000, 0x3c2a3808, 3 | BRF_GRA },           //  5 					/ TC5316200
+	{ "059-c5.c5",    0x200000, 0x59013f9e, 3 | BRF_GRA },           //  6 					/ TC5316200
+	{ "059-c6.c6",    0x200000, 0x1c8d5def, 3 | BRF_GRA },           //  7 					/ TC5316200
+	{ "059-c7.c7",    0x200000, 0xc88f7035, 3 | BRF_GRA },           //  8 					/ TC5316200
+	{ "059-c8.c8",    0x200000, 0x484ce3ba, 3 | BRF_GRA },           //  9 					/ TC5316200
+
+	{ "059-m1.m1",    0x020000, 0x29992eba, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code			/ TC531001
+
+	{ "059-v1.v1",    0x200000, 0x530c50fd, 5 | BRF_SND },           // 11 Sound data		/ TC5316200
+	{ "059-v2.v2",    0x200000, 0xeb6f1cdb, 5 | BRF_SND },           // 12 					/ TC5316200
+	{ "059-v3.v3",    0x200000, 0x7038c2f9, 5 | BRF_SND },           // 13 					/ TC5316200
+};
+
+STDROMPICKEXT(savagerb, savagerb, neogeo)
+STD_ROM_FN(savagerb)
+
+struct BurnDriver BurnDrvsavagerb = {
+	"savagerb", "savagere", "neogeo", NULL, "1995",
+	"Savage Reign (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, savagerbRomInfo, savagerbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Fight Fever (Boss Hack)
+
+static struct BurnRomInfo fightfebRomDesc[] = {
+	{ "060-p1b.p1",   0x100000, 0x0b9e106d, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 
+
+	{ "060-s1.s1",    0x020000, 0x7f012104, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "060-c1.c1",    0x200000, 0x8908fff9, 3 | BRF_GRA },           //  2 Sprite data
+	{ "060-c2.c2",    0x200000, 0xc6649492, 3 | BRF_GRA },           //  3 
+	{ "060-c3.c3",    0x200000, 0x0956b437, 3 | BRF_GRA },           //  4 
+	{ "060-c4.c4",    0x200000, 0x026f3b62, 3 | BRF_GRA },           //  5 
+
+	{ "060-m1.m1",    0x020000, 0x0b7c4e65, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code
+
+	{ "060-v1.v1",    0x200000, 0xf417c215, 5 | BRF_SND },           //  7 Sound data
+	{ "060-v2.v2",    0x100000, 0xefcff7cf, 5 | BRF_SND },           //  8 
+};
+
+STDROMPICKEXT(fightfeb, fightfeb, neogeo)
+STD_ROM_FN(fightfeb)
+
+struct BurnDriver BurnDrvfightfeb = {
+	"fightfeb", "fightfev", "neogeo", NULL, "1994",
+	"Fight Fever (Boss Hack)\0", "Hack", "Viccom", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_SCRFIGHT, 0,
+	NULL, fightfebRomInfo, fightfebRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Samurai Shodown II (Boss Hack)
+
+static struct BurnRomInfo samsho2bRomDesc[] = {
+	{ "063-p1b.p1",   0x200000, 0x7ab45a4c, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "063-s1.s1",    0x020000, 0x64a5cd66, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "063-c1.c1",    0x200000, 0x86cd307c, 3 | BRF_GRA },           //  2 Sprite data
+	{ "063-c2.c2",    0x200000, 0xcdfcc4ca, 3 | BRF_GRA },           //  3
+	{ "063-c3.c3",    0x200000, 0x7a63ccc7, 3 | BRF_GRA },           //  4
+	{ "063-c4.c4",    0x200000, 0x751025ce, 3 | BRF_GRA },           //  5
+	{ "063-c5.c5",    0x200000, 0x20d3a475, 3 | BRF_GRA },           //  6
+	{ "063-c6.c6",    0x200000, 0xae4c0a88, 3 | BRF_GRA },           //  7
+	{ "063-c7.c7",    0x200000, 0x2df3cbcf, 3 | BRF_GRA },           //  8
+	{ "063-c8.c8",    0x200000, 0x1ffc6dfa, 3 | BRF_GRA },           //  9
+
+	{ "063-m1.m1",    0x020000, 0x56675098, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "063-v1.v1",    0x200000, 0x37703f91, 5 | BRF_SND },           // 11 Sound data
+	{ "063-v2.v2",    0x200000, 0x0142bde8, 5 | BRF_SND },           // 12
+	{ "063-v3.v3",    0x200000, 0xd07fa5ca, 5 | BRF_SND },           // 13
+	{ "063-v4.v4",    0x100000, 0x24aab4bb, 5 | BRF_SND },           // 14
+};
+
+STDROMPICKEXT(samsho2b, samsho2b, neogeo)
+STD_ROM_FN(samsho2b)
+
+struct BurnDriver BurnDrvSamSho2b = {
+	"samsho2b", "samsho2", "neogeo", NULL, "1994",
+	"Samurai Shodown II (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, samsho2bRomInfo, samsho2bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// World Heroes 2 Jet (Boss Hack)
+
+static struct BurnRomInfo wh2jbRomDesc[] = {
+	{ "064-p1b.p1",   0x200000, 0x14d5f4af, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ TC5316200
+
+	{ "064-s1.s1",    0x020000, 0x2a03998a, 2 | BRF_GRA },           //  1 Text layer tiles / TC531000
+
+	{ "064-c1.c1",    0x200000, 0x2ec87cea, 3 | BRF_GRA },           //  2 Sprite data		/ TC5316200
+	{ "064-c2.c2",    0x200000, 0x526b81ab, 3 | BRF_GRA },           //  3 					/ TC5316200
+	{ "064-c3.c3",    0x200000, 0x436d1b31, 3 | BRF_GRA },           //  4 					/ TC5316200
+	{ "064-c4.c4",    0x200000, 0xf9c8dd26, 3 | BRF_GRA },           //  5 					/ TC5316200
+	{ "064-c5.c5",    0x200000, 0x8e34a9f4, 3 | BRF_GRA },           //  6 					/ TC5316200
+	{ "064-c6.c6",    0x200000, 0xa43e4766, 3 | BRF_GRA },           //  7 					/ TC5316200
+	{ "064-c7.c7",    0x200000, 0x59d97215, 3 | BRF_GRA },           //  8 					/ TC5316200
+	{ "064-c8.c8",    0x200000, 0xfc092367, 3 | BRF_GRA },           //  9 					/ TC5316200
+
+	{ "064-m1.m1",    0x020000, 0xd2eec9d3, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code			/ TC531001
+
+	{ "064-v1.v1",    0x200000, 0xaa277109, 5 | BRF_SND },           //  7 Sound data		/ TC5316200
+	{ "064-v2.v2",    0x200000, 0xb6527edd, 5 | BRF_SND },           //  8 					/ TC5316200
+};
+
+STDROMPICKEXT(wh2jb, wh2jb, neogeo)
+STD_ROM_FN(wh2jb)
+
+struct BurnDriver BurnDrvwh2jb = {
+	"wh2jb", "wh2j", "neogeo", NULL, "1994",
+	"World Heroes 2 Jet (Boss Hack)\0", "Hack", "ADK / SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, wh2jbRomInfo, wh2jbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Windjammers / Flying Power Disc (Korean)
+
+static struct BurnRomInfo wjammerkRomDesc[] = {
+	{ "065-p1.p1",    0x100000, 0x6692c140, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 		/ mask rom TC538200
+
+	{ "065-s1.s1",    0x020000, 0x074b5723, 2 | BRF_GRA },           //  1 Text layer tiles / mask rom TC531000
+
+	{ "065-c1k.c1",   0x100000, 0xebded27e, 3 | BRF_GRA },           //  2 Sprite data		/ mask rom TC538200
+	{ "065-c2k.c2",   0x100000, 0xf5483767, 3 | BRF_GRA },           //  3 					/ mask rom TC538200
+	{ "065-c3.c3",    0x100000, 0x40986386, 3 | BRF_GRA },           //  4 					/ mask rom TC538200
+	{ "065-c4.c4",    0x100000, 0x715e15ff, 3 | BRF_GRA },           //  5 					/ mask rom TC538200
+
+	{ "065-m1.m1",    0x020000, 0x52c23cfc, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code			/ mask rom TC531001
+
+	{ "065-v1.v1",    0x100000, 0xce8b3698, 5 | BRF_SND },           //  7 Sound data		/ mask rom TC538200
+	{ "065-v2.v2",    0x100000, 0x659f9b96, 5 | BRF_SND },           //  8 					/ mask rom TC538200
+	{ "065-v3.v3",    0x100000, 0x39f73061, 5 | BRF_SND },           //  9 					/ mask rom TC538200
+	{ "065-v4.v4",    0x100000, 0x5dee7963, 5 | BRF_SND },           // 10 					/ mask rom TC538200
+};
+
+STDROMPICKEXT(wjammerk, wjammerk, neogeo)
+STD_ROM_FN(wjammerk)
+
+struct BurnDriver BurnDrvwjammerk = {
+	"wjammerk", "wjammers", "neogeo", NULL, "2005",
+	"Windjammers / Flying Power Disc (Korean)\0", "Hack", "Data East Corporation", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_SPORTSMISC, 0,
+	NULL, wjammerkRomInfo, wjammerkRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Karnov's Revenge / Fighter's History Dynamite (Hidden Hack)
+
+static struct BurnRomInfo karnovrbRomDesc[] = {
+	{ "066-p1h.p1",   0x100000, 0x7b776bb5, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "066-s1.s1",    0x020000, 0xbae5d5e5, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "066-c1.c1",    0x200000, 0x09dfe061, 3 | BRF_GRA },           //  2 Sprite data
+	{ "066-c2.c2",    0x200000, 0xe0f6682a, 3 | BRF_GRA },           //  3 
+	{ "066-c3.c3",    0x200000, 0xa673b4f7, 3 | BRF_GRA },           //  4 
+	{ "066-c4.c4",    0x200000, 0xcb3dc5f4, 3 | BRF_GRA },           //  5 
+	{ "066-c5.c5",    0x200000, 0x9a28785d, 3 | BRF_GRA },           //  6 
+	{ "066-c6.c6",    0x200000, 0xc15c01ed, 3 | BRF_GRA },           //  7 
+
+	{ "066-m1.m1",    0x020000, 0x030beae4, 4 | BRF_ESS | BRF_PRG }, //  8 Z80 code
+
+	{ "066-v1.v1",    0x200000, 0x0b7ea37a, 5 | BRF_SND },           //  9 Sound data
+};
+
+STDROMPICKEXT(karnovrb, karnovrb, neogeo)
+STD_ROM_FN(karnovrb)
+
+struct BurnDriver BurnDrvkarnovrb = {
+	"karnovrb", "karnovr", "neogeo", NULL, "1994",
+	"Karnov's Revenge / Fighter's History Dynamite (Hidden Hack)\0", "Hack", "Data East Corporation", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, karnovrbRomInfo, karnovrbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Fatal Fury 3 - Road to the Final Victory (Boss Hack)
+
+static struct BurnRomInfo fatfur3bRomDesc[] = {
+	{ "069-p1b.p1",   0x100000, 0xb8362f59, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "069-sp2.sp2",  0x200000, 0xdbe963ed, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "069-s1.s1",    0x020000, 0x0b33a800, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "069-c1.c1",    0x400000, 0xe302f93c, 3 | BRF_GRA },           //  3 Sprite data
+	{ "069-c2.c2",    0x400000, 0x1053a455, 3 | BRF_GRA },           //  4 
+	{ "069-c3.c3",    0x400000, 0x1c0fde2f, 3 | BRF_GRA },           //  5 
+	{ "069-c4.c4",    0x400000, 0xa25fc3d0, 3 | BRF_GRA },           //  6 
+	{ "069-c5.c5",    0x200000, 0xb3ec6fa6, 3 | BRF_GRA },           //  7 
+	{ "069-c6.c6",    0x200000, 0x69210441, 3 | BRF_GRA },           //  8 
+
+	{ "069-m1.m1",    0x020000, 0xfce72926, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "069-v1.v1",    0x400000, 0x2bdbd4db, 5 | BRF_SND },           // 10 Sound data
+	{ "069-v2.v2",    0x400000, 0xa698a487, 5 | BRF_SND },           // 11 
+	{ "069-v3.v3",    0x200000, 0x581c5304, 5 | BRF_SND },           // 12 
+};
+
+STDROMPICKEXT(fatfur3b, fatfur3b, neogeo)
+STD_ROM_FN(fatfur3b)
+
+struct BurnDriver BurnDrvFatfur3b = {
+	"fatfur3b", "fatfury3", "neogeo", NULL, "1995",
+	"Fatal Fury 3 - Road to the Final Victory (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_FATFURY,
+	NULL, fatfur3bRomInfo, fatfur3bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Zupapa! (Fully Decrypted)
+
+static struct BurnRomInfo zupapandRomDesc[] = {
+	{ "070-p1.p1",    0x100000, 0x5a96203e, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "070-c1d.c1",   0x800000, 0x65d73348, 3 | BRF_GRA },           //  1 Sprite data
+	{ "070-c2d.c2",   0x800000, 0xc498708f, 3 | BRF_GRA },           //  2 
+
+	{ "070-epr.m1",   0x020000, 0x5a3b3191, 4 | BRF_ESS | BRF_PRG }, //  3 Z80 code
+
+	{ "070-v1.v1",    0x200000, 0xd3a7e1ff, 5 | BRF_SND },           //  4 Sound data
+};
+
+STDROMPICKEXT(zupapand, zupapand, neogeo)
+STD_ROM_FN(zupapand)
+
+struct BurnDriver BurnDrvZupapand = {
+	"zupapand", "zupapa", "neogeo", NULL, "2001",
+	"Zupapa! (Fully Decrypted)\0", NULL, "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PLATFORM, 0,
+	NULL, zupapandRomInfo, zupapandRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Galaxy Fight - Universal Warriors (Hidden Hack)
+
+static struct BurnRomInfo galaxyfhRomDesc[] = {
+	{ "078-p1h.p1",   0x200000, 0x7fede043, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ mask rom TC5316200
+
+	{ "078-s1.s1",    0x020000, 0x72f8923e, 2 | BRF_GRA },           //  1 Text layer tiles / mask rom TC531000
+
+	{ "078-c1.c1",    0x200000, 0xc890c7c0, 3 | BRF_GRA },           //  2 Sprite data		/ mask rom TC5316200
+	{ "078-c2.c2",    0x200000, 0xb6d25419, 3 | BRF_GRA },           //  3 					/ mask rom TC5316200
+	{ "078-c3.c3",    0x200000, 0x9d87e761, 3 | BRF_GRA },           //  4 					/ mask rom TC5316200
+	{ "078-c4.c4",    0x200000, 0x765d7cb8, 3 | BRF_GRA },           //  5 					/ mask rom TC5316200
+	{ "078-c5.c5",    0x200000, 0xe6b77e6a, 3 | BRF_GRA },           //  6 					/ mask rom TC5316200
+	{ "078-c6.c6",    0x200000, 0xd779a181, 3 | BRF_GRA },           //  7 					/ mask rom TC5316200
+	{ "078-c7.c7",    0x100000, 0x4f27d580, 3 | BRF_GRA },           //  8 					/ mask rom TC5316200
+	{ "078-c8.c8",    0x100000, 0x0a7cc0d8, 3 | BRF_GRA },           //  9 					/ mask rom TC5316200
+
+	{ "078-m1.m1",    0x020000, 0x8e9e3b10, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code			/ mask rom TC531001
+
+	{ "078-v1.v1",    0x200000, 0xe3b735ac, 5 | BRF_SND },           // 11 Sound data		/ mask rom TC5316200
+	{ "078-v2.v2",    0x200000, 0x6a8e78c2, 5 | BRF_SND },           // 12 					/ mask rom TC5316200
+	{ "078-v3.v3",    0x100000, 0x70bca656, 5 | BRF_SND },           // 13 					/ mask rom TC538200
+};
+
+STDROMPICKEXT(galaxyfh, galaxyfh, neogeo)
+STD_ROM_FN(galaxyfh)
+
+struct BurnDriver BurnDrvgalaxyfh = {
+	"galaxyfh", "galaxyfg", "neogeo", NULL, "1995",
+	"Galaxy Fight - Universal Warriors (Hidden Hack)\0", "Hack", "Sunsoft", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, galaxyfhRomInfo, galaxyfhRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '95 (Korean, NeoGeo CD Hack)
+
+static struct BurnRomInfo kof95krRomDesc[] = {
+	{ "084-p1kr.p1",  0x200000, 0x162a1405, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "084-s1kr.s1",  0x020000, 0x0d07a5ab, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "084-c1kr.c1",  0x400000, 0x4bb4eb90, 3 | BRF_GRA },           //  2 Sprite data
+	{ "084-c2kr.c2",  0x400000, 0x7e94c968, 3 | BRF_GRA },           //  3 
+	{ "084-c3.c3",    0x400000, 0xa4e65d1b, 3 | BRF_GRA },           //  4
+	{ "084-c4.c4",    0x400000, 0xc1ace468, 3 | BRF_GRA },           //  5 
+	{ "084-c5.c5",    0x200000, 0x8a2c1edc, 3 | BRF_GRA },           //  6 
+	{ "084-c6.c6",    0x200000, 0xf593ac35, 3 | BRF_GRA },           //  7 
+	{ "084-c7.c7",    0x100000, 0x9904025f, 3 | BRF_GRA },           //  8 
+	{ "084-c8.c8",    0x100000, 0x78eb0f9b, 3 | BRF_GRA },           //  9 
+
+	{ "084-m1.m1",    0x020000, 0x6f2d7429, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "084-v1.v1",    0x400000, 0x84861b56, 5 | BRF_SND },           // 11 Sound data
+	{ "084-v2.v2",    0x200000, 0xb38a2803, 5 | BRF_SND },           // 12 
+	{ "084-v3.v3",    0x100000, 0xd683a338, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(kof95kr, kof95kr, neogeo)
+STD_ROM_FN(kof95kr)
+
+struct BurnDriver BurnDrvKof95kr = {
+	"kof95kr", "kof95", "neogeo", NULL, "2005",
+	"The King of Fighters '95 (Korean, NeoGeo CD Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof95krRomInfo, kof95krRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Samurai Shodown III (Boss Hack)
+
+static struct BurnRomInfo samsho3bRomDesc[] = {
+	{ "087-eprb.ep1", 0x080000, 0x6aca07b5, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ M27C4002
+	{ "087-epr.ep2",  0x080000, 0x256f5302, 1 | BRF_ESS | BRF_PRG }, //  1 					/ M27C4002
+	{ "087-epr.ep3",  0x080000, 0xbf2db5dd, 1 | BRF_ESS | BRF_PRG }, //  2 					/ M27C4002
+	{ "087-epr.ep4",  0x080000, 0x53e60c58, 1 | BRF_ESS | BRF_PRG }, //  3 					/ M27C4002
+
+	{ "087-p5.p5",    0x100000, 0xe86ca4af, 1 | BRF_ESS | BRF_PRG }, //  4 					/ TC538200
+
+	{ "087-s1.s1",    0x020000, 0x74ec7d9f, 2 | BRF_GRA },           //  5 Text layer tiles / TC531000
+
+	{ "087-c1.c1",    0x400000, 0x07a233bc, 3 | BRF_GRA },           //  6 Sprite data		/ TC5332202
+	{ "087-c2.c2",    0x400000, 0x7a413592, 3 | BRF_GRA },           //  7 					/ TC5332202
+	{ "087-c3.c3",    0x400000, 0x8b793796, 3 | BRF_GRA },           //  8 					/ TC533202
+	{ "087-c4.c4",    0x400000, 0x728fbf11, 3 | BRF_GRA },           //  9 					/ TC533202
+	{ "087-c5.c5",    0x400000, 0x172ab180, 3 | BRF_GRA },           // 10 					/ TC5332202
+	{ "087-c6.c6",    0x400000, 0x002ff8f3, 3 | BRF_GRA },           // 11 					/ TC5332202
+	{ "087-c7.c7",    0x100000, 0xae450e3d, 3 | BRF_GRA },           // 12 					/ TC538200
+	{ "087-c8.c8",    0x100000, 0xa9e82717, 3 | BRF_GRA },           // 13 					/ TC538200
+
+	{ "087-m1.m1",    0x020000, 0x8e6440eb, 4 | BRF_ESS | BRF_PRG }, // 14 Z80 code			/ TC531001
+
+	{ "087-v1.v1",    0x400000, 0x84bdd9a0, 5 | BRF_SND },           // 15 Sound data		/ TC5332201
+	{ "087-v2.v2",    0x200000, 0xac0f261a, 5 | BRF_SND },           // 16					/ TC5316200
+};
+
+STDROMPICKEXT(samsho3b, samsho3b, neogeo)
+STD_ROM_FN(samsho3b)
+
+struct BurnDriver BurnDrvSamSho3b = {
+	"samsho3b", "samsho3", "neogeo", NULL, "1995",
+	"Samurai Shodown III (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, samsho3bRomInfo, samsho3bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// World Heroes Perfect (Boss Hack)
+
+static struct BurnRomInfo whpbRomDesc[] = {
+	{ "090-p1b.p1",   0x200000, 0x9c1a79d5, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ mask rom TC5316200
+
+	{ "090-s1.s1",    0x020000, 0x174a880f, 2 | BRF_GRA },           //  1 Text layer tiles / mask rom TC531000
+
+	{ "090-c1b.c1",   0x400000, 0xa56ebf84, 3 | BRF_GRA },           //  2 Sprite data		/ mask rom TC5332205
+	{ "090-c2b.c2",   0x400000, 0x6d589146, 3 | BRF_GRA },           //  3 					/ mask rom TC5332205
+	{ "064-c3.c3",    0x200000, 0x436d1b31, 3 | BRF_GRA },           //  4 					/ mask rom TC5316200
+	{ "064-c4.c4",    0x200000, 0xf9c8dd26, 3 | BRF_GRA },           //  5 					/ mask rom TC5316200
+	{ "064-c5.c5",    0x200000, 0x8e34a9f4, 3 | BRF_GRA },           //  6 					/ mask rom TC5316200
+	{ "064-c6.c6",    0x200000, 0xa43e4766, 3 | BRF_GRA },           //  7 					/ mask rom TC5316200
+	{ "064-c7.c7",    0x200000, 0x59d97215, 3 | BRF_GRA },           //  8 					/ mask rom TC5316200
+	{ "064-c8.c8",    0x200000, 0xfc092367, 3 | BRF_GRA },           //  9 					/ mask rom TC5316200
+
+	{ "090-m1.m1",    0x020000, 0x28065668, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code			/ mask rom TC531001
+
+	{ "090-v1.v1",    0x200000, 0x30cf2709, 5 | BRF_SND },           // 11 Sound data		/ mask rom TC5316200
+	{ "064-v2.v2",    0x200000, 0xb6527edd, 5 | BRF_SND },           // 12 					/ mask rom TC5316200
+	{ "090-v3.v3",    0x200000, 0x1908a7ce, 5 | BRF_SND },           // 13 					/ mask rom TC5316200
+};
+
+STDROMPICKEXT(whpb, whpb, neogeo)
+STD_ROM_FN(whpb)
+
+struct BurnDriver BurnDrvwhpb = {
+	"whpb", "whp", "neogeo", NULL, "1995",
+	"World Heroes Perfect (Boss Hack)\0", "Hack", "ADK / SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, whpbRomInfo, whpbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Far East of Eden - Kabuki Klash / Tengai Makyou - Shin Den (Boss Hack)
+
+static struct BurnRomInfo kabukikbRomDesc[] = {
+	{ "092-p1b.p1",   0x200000, 0x9e17f576, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "092-s1.s1",    0x020000, 0xa3d68ee2, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "092-c1.c1",    0x400000, 0x2a9fab01, 3 | BRF_GRA },           //  2 Sprite data
+	{ "092-c2.c2",    0x400000, 0x6d2bac02, 3 | BRF_GRA },           //  3 
+	{ "092-c3.c3",    0x400000, 0x5da735d6, 3 | BRF_GRA },           //  4 
+	{ "092-c4.c4",    0x400000, 0xde07f997, 3 | BRF_GRA },           //  5 
+
+	{ "092-m1.m1",    0x020000, 0x91957ef6, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code
+
+	{ "092-v1.v1",    0x200000, 0x69e90596, 5 | BRF_SND },           //  7 Sound data
+	{ "092-v2.v2",    0x200000, 0x7abdb75d, 5 | BRF_SND },           //  8 
+	{ "092-v3.v3",    0x200000, 0xeccc98d3, 5 | BRF_SND },           //  9 
+	{ "092-v4.v4",    0x100000, 0xa7c9c949, 5 | BRF_SND },           // 10 
+};
+
+STDROMPICKEXT(kabukikb, kabukikb, neogeo)
+STD_ROM_FN(kabukikb)
+
+struct BurnDriver BurnDrvkabukikb = {
+	"kabukikb", "kabukikl", "neogeo", NULL, "1995",
+	"Far East of Eden - Kabuki Klash / Tengai Makyou - Shin Den (Boss Hack)\0", "Hack", "Hudson", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, kabukikbRomInfo, kabukikbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Voltage Fighter - Gowcaizer (Boss Hack)
+
+static struct BurnRomInfo gowcaizbRomDesc[] = {
+	{ "094-p1b.p1",   0x200000, 0xd4f37cc4, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ TC5316200
+
+	{ "094-s1.s1",    0x020000, 0x2f8748a2, 2 | BRF_GRA },           //  1 Text layer tiles / TC531000
+
+	{ "094-c1.c1",    0x200000, 0x042f6af5, 3 | BRF_GRA },           //  2 Sprite data		/ TC5316200
+	{ "094-c2.c2",    0x200000, 0x0fbcd046, 3 | BRF_GRA },           //  3 					/ TC5316200
+	{ "094-c3.c3",    0x200000, 0x58bfbaa1, 3 | BRF_GRA },           //  4 					/ TC5316200
+	{ "094-c4.c4",    0x200000, 0x9451ee73, 3 | BRF_GRA },           //  5 					/ TC5316200
+	{ "094-c5.c5",    0x200000, 0xff9cf48c, 3 | BRF_GRA },           //  6 					/ TC5316200
+	{ "094-c6.c6",    0x200000, 0x31bbd918, 3 | BRF_GRA },           //  7 					/ TC5316200
+	{ "094-c7.c7",    0x200000, 0x2091ec04, 3 | BRF_GRA },           //  8 					/ TC5316200
+	{ "094-c8.c8",    0x200000, 0xd80dd241, 3 | BRF_GRA },           //  9 					/ TC5316200
+
+	{ "094-m1.m1",    0x020000, 0x78c851cb, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code			/ TC531001
+
+	{ "094-v1.v1",    0x200000, 0x6c31223c, 5 | BRF_SND },           // 11 Sound data		/ TC5316200
+	{ "094-v2.v2",    0x200000, 0x8edb776c, 5 | BRF_SND },           // 12 					/ TC5316200
+	{ "094-v3.v3",    0x100000, 0xc63b9285, 5 | BRF_SND },           // 13 					/ TC538200
+};
+
+STDROMPICKEXT(gowcaizb, gowcaizb, neogeo)
+STD_ROM_FN(gowcaizb)
+
+struct BurnDriver BurnDrvgowcaizb = {
+	"gowcaizb", "gowcaizr", "neogeo", NULL, "1995",
+	"Voltage Fighter - Gowcaizer (Boss Hack)\0", "Hack", "Technos", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, gowcaizbRomInfo, gowcaizbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Art of Fighting 3 - The Path of the Warrior (Boss Hack)
+
+static struct BurnRomInfo aof3bRomDesc[] = {
+	{ "096-p1b.p1",   0x100000, 0x70969ff1, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ TC538200
+	{ "096-p2.sp2",   0x200000, 0x4d5a2602, 1 | BRF_ESS | BRF_PRG }, //  1 					/ TC5316200
+
+	{ "096-s1.s1",    0x020000, 0xcc7fd344, 2 | BRF_GRA },           //  2 Text layer tiles / TC531000
+
+	{ "096-c1.c1",    0x400000, 0xf17b8d89, 3 | BRF_GRA },           //  3 Sprite data		/ TC5332205
+	{ "096-c2.c2",    0x400000, 0x3840c508, 3 | BRF_GRA },           //  4 					/ TC5332205
+	{ "096-c3.c3",    0x400000, 0x55f9ee1e, 3 | BRF_GRA },           //  5 					/ TC5332205
+	{ "096-c4.c4",    0x400000, 0x585b7e47, 3 | BRF_GRA },           //  6 					/ TC5332205
+	{ "096-c5.c5",    0x400000, 0xc75a753c, 3 | BRF_GRA },           //  7 					/ TC5332205
+	{ "096-c6.c6",    0x400000, 0x9a9d2f7a, 3 | BRF_GRA },           //  8 					/ TC5332205
+	{ "096-c7.c7",    0x200000, 0x51bd8ab2, 3 | BRF_GRA },           //  9 					/ TC5316200
+	{ "096-c8.c8",    0x200000, 0x9a34f99c, 3 | BRF_GRA },           // 10 					/ TC5316200
+
+	{ "096-m1.m1",    0x020000, 0xcb07b659, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code			/ TC531001
+
+	{ "096-v1.v1",    0x200000, 0xe2c32074, 5 | BRF_SND },           // 12 Sound data		/ TC5316200
+	{ "096-v2.v2",    0x200000, 0xa290eee7, 5 | BRF_SND },           // 13 					/ TC5316200
+	{ "096-v3.v3",    0x200000, 0x199d12ea, 5 | BRF_SND },           // 14 					/ TC5316200
+};
+
+STDROMPICKEXT(aof3b, aof3b, neogeo)
+STD_ROM_FN(aof3b)
+
+struct BurnDriver BurnDrvAof3b = {
+	"aof3b", "aof3", "neogeo", NULL, "1996",
+	"Art of Fighting 3 - The Path of the Warrior (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, aof3bRomInfo, aof3bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Puzzle De Pon! (Korean)
+
+static struct BurnRomInfo puzzldpkRomDesc[] = {
+	{ "202-p1.p1",    0x080000, 0x2b61415b, 1 | BRF_ESS | BRF_PRG }, //  0 68K code			/ TC534200
+
+	{ "202-s1.s1",    0x020000, 0xcd19264f, 2 | BRF_GRA },           //  1 Text layer tiles / TC531000
+
+	{ "202-c1k.c1",   0x100000, 0xfc5e5ae7, 3 | BRF_GRA },           //  2 Sprite data		/ TC538200
+	{ "202-c2.c2",    0x100000, 0x42371307, 3 | BRF_GRA },           //  3 					/ TC538200
+
+	{ "202-m1.m1",    0x020000, 0x9c0291ea, 4 | BRF_ESS | BRF_PRG }, //  4 Z80 code			/ TC531001
+
+	{ "202-v1.v1",    0x080000, 0xdebeb8fb, 5 | BRF_SND },           //  5 Sound data		/ TC534200
+};
+
+STDROMPICKEXT(puzzldpk, puzzldpk, neogeo)
+STD_ROM_FN(puzzldpk)
+
+struct BurnDriver BurnDrvpuzzldpk = {
+	"puzzldpk", "puzzledp", "neogeo", NULL, "2006",
+	"Puzzle De Pon! (Korean)\0", "Hack", "Taito (Visco license)", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PUZZLE, 0,
+	NULL, puzzldpkRomInfo, puzzldpkRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '96 (Korean, Add Practice Mode)
+
+static struct BurnRomInfo kof96krRomDesc[] = {
+	{ "214-p1kr.p1",  0x100000, 0xcd100253, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "214-p2kr.p2",  0x200000, 0xa7e05e29, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "214-s1.s1",    0x020000, 0x1254cbdb, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "214-c1kr.c1",  0x400000, 0x0524e33e, 3 | BRF_GRA },           //  3 Sprite data
+	{ "214-c2kr.c2",  0x400000, 0xe1374ccc, 3 | BRF_GRA },           //  4 
+	{ "214-c3.c3",    0x400000, 0x64989a65, 3 | BRF_GRA },           //  5 
+	{ "214-c4.c4",    0x400000, 0xafbea515, 3 | BRF_GRA },           //  6 
+	{ "214-c5.c5",    0x400000, 0x2a3bbd26, 3 | BRF_GRA },           //  7 
+	{ "214-c6.c6",    0x400000, 0x44d30dc7, 3 | BRF_GRA },           //  8 
+	{ "214-c7.c7",    0x400000, 0x3687331b, 3 | BRF_GRA },           //  9 
+	{ "214-c8.c8",    0x400000, 0xfa1461ad, 3 | BRF_GRA },           // 10 
+
+	{ "214-m1.m1",    0x020000, 0xdabc427c, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "214-v1.v1",    0x400000, 0x63f7b045, 5 | BRF_SND },           // 12 Sound data
+	{ "214-v2.v2",    0x400000, 0x25929059, 5 | BRF_SND },           // 13 
+	{ "214-v3.v3",    0x200000, 0x92a2257d, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof96kr, kof96kr, neogeo)
+STD_ROM_FN(kof96kr)
+
+struct BurnDriver BurnDrvKof96kr = {
+	"kof96kr", "kof96", "neogeo", NULL, "2006",
+	"The King of Fighters '96 (Korean, Add Practice Mode)\0", "Hack", "SNK", "Neo Geo AES",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO,  GBF_VSFIGHT, FBF_KOF,
+	NULL, kof96krRomInfo, kof96krRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Kizuna Encounter - Super Tag Battle / Fu'un Super Tag Battle (Boss Hack)
+
+static struct BurnRomInfo kizunabRomDesc[] = {
+	{ "216-p1b.p1",   0x200000, 0xa4ccd402, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "216-s1.s1",    0x020000, 0xefdc72d7, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "059-c1.c1",    0x200000, 0x763ba611, 3 | BRF_GRA },           //  2 Sprite data
+	{ "059-c2.c2",    0x200000, 0xe05e8ca6, 3 | BRF_GRA },           //  3 
+	{ "216-c3.c3",    0x400000, 0x665c9f16, 3 | BRF_GRA },           //  4 
+	{ "216-c4.c4",    0x400000, 0x7f5d03db, 3 | BRF_GRA },           //  5 
+	{ "059-c5.c5",    0x200000, 0x59013f9e, 3 | BRF_GRA },           //  6 
+	{ "059-c6.c6",    0x200000, 0x1c8d5def, 3 | BRF_GRA },           //  7 
+	{ "059-c7.c7",    0x200000, 0xc88f7035, 3 | BRF_GRA },           //  8 
+	{ "059-c8.c8",    0x200000, 0x484ce3ba, 3 | BRF_GRA },           //  9 
+
+	{ "216-m1.m1",    0x020000, 0x1b096820, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "059-v1.v1",    0x200000, 0x530c50fd, 5 | BRF_SND },           // 11 Sound data
+	{ "216-v2.v2",    0x200000, 0x03667a8d, 5 | BRF_SND },           // 12 
+	{ "059-v3.v3",    0x200000, 0x7038c2f9, 5 | BRF_SND },           // 13 
+	{ "216-v4.v4",    0x200000, 0x31b99bd6, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kizunab, kizunab, neogeo)
+STD_ROM_FN(kizunab)
+
+struct BurnDriver BurnDrvkizunab = {
+	"kizunab", "kizuna", "neogeo", NULL, "1996",
+	"Kizuna Encounter - Super Tag Battle / Fu'un Super Tag Battle (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, kizunabRomInfo, kizunabRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Ninja Master's - haoh-ninpo-cho (Boss Hack)
+
+static struct BurnRomInfo ninjamabRomDesc[] = {
+	{ "217-p1b.p1",   0x100000, 0x661d86c9, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "217-p2.sp2",   0x200000, 0x191fca88, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "217-s1.s1",    0x020000, 0x8ff782f0, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "217-c1.c1",    0x400000, 0x5fe97bc4, 3 | BRF_GRA },           //  3 Sprite data
+	{ "217-c2.c2",    0x400000, 0x886e0d66, 3 | BRF_GRA },           //  4 
+	{ "217-c3.c3",    0x400000, 0x59e8525f, 3 | BRF_GRA },           //  5 
+	{ "217-c4.c4",    0x400000, 0x8521add2, 3 | BRF_GRA },           //  6 
+	{ "217-c5.c5",    0x400000, 0xfb1896e5, 3 | BRF_GRA },           //  7 
+	{ "217-c6.c6",    0x400000, 0x1c98c54b, 3 | BRF_GRA },           //  8 
+	{ "217-c7.c7",    0x400000, 0x8b0ede2e, 3 | BRF_GRA },           //  9 
+	{ "217-c8.c8",    0x400000, 0xa085bb61, 3 | BRF_GRA },           // 10 
+
+	{ "217-m1.m1",    0x020000, 0xd00fb2af, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "217-v1.v1",    0x400000, 0x1c34e013, 5 | BRF_SND },           // 12 Sound data
+	{ "217-v2.v2",    0x200000, 0x22f1c681, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(ninjamab, ninjamab, neogeo)
+STD_ROM_FN(ninjamab)
+
+struct BurnDriver BurnDrvninjamab = {
+	"ninjamab", "ninjamas", "neogeo", NULL, "1996",
+	"Ninja Master's - haoh-ninpo-cho (Boss Hack)\0", "Hack", "ADK / SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, ninjamabRomInfo, ninjamabRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Samurai Shodown IV - Amakusa's Revenge (Boss Hack)
+
+static struct BurnRomInfo samsho4bRomDesc[] = {
+	{ "222-p1b.p1",   0x100000, 0xb3cdfc29, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "222-p2.sp2",   0x400000, 0xb023cd8b, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "222-s1.s1",    0x020000, 0x8d3d3bf9, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "222-c1.c1",    0x400000, 0x68f2ed95, 3 | BRF_GRA },           //  3 Sprite data
+	{ "222-c2.c2",    0x400000, 0xa6e9aff0, 3 | BRF_GRA },           //  4 
+	{ "222-c3.c3",    0x400000, 0xc91b40f4, 3 | BRF_GRA },           //  5 
+	{ "222-c4.c4",    0x400000, 0x359510a4, 3 | BRF_GRA },           //  6 
+	{ "222-c5.c5",    0x400000, 0x9cfbb22d, 3 | BRF_GRA },           //  7 
+	{ "222-c6.c6",    0x400000, 0x685efc32, 3 | BRF_GRA },           //  8 
+	{ "222-c7.c7",    0x400000, 0xd0f86f0d, 3 | BRF_GRA },           //  9 
+	{ "222-c8.c8",    0x400000, 0xadfc50e3, 3 | BRF_GRA },           // 10 
+
+	{ "222-m1.m1",    0x020000, 0x7615bc1b, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "222-v1.v1",    0x400000, 0x7d6ba95f, 5 | BRF_SND },           // 12 Sound data
+	{ "222-v2.v2",    0x400000, 0x6c33bb5d, 5 | BRF_SND },           // 13 
+	{ "222-v3.v3",    0x200000, 0x831ea8c0, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(samsho4b, samsho4b, neogeo)
+STD_ROM_FN(samsho4b)
+
+struct BurnDriver BurnDrvSamSho4b = {
+	"samsho4b", "samsho4", "neogeo", NULL, "1996",
+	"Samurai Shodown IV - Amakusa's Revenge (Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, samsho4bRomInfo, samsho4bRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Real Bout Fatal Fury Special (Hidden Hack)
+
+static struct BurnRomInfo rbffspehRomDesc[] = {
+	{ "223-p1b.p1",   0x100000, 0xabf2a6e7, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "223-p2.sp2",   0x400000, 0xaddd8f08, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "223-s1.s1",    0x020000, 0x7ecd6e8c, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "223-c1.c1",    0x400000, 0xebab05e2, 3 | BRF_GRA },           //  3 Sprite data
+	{ "223-c2.c2",    0x400000, 0x641868c3, 3 | BRF_GRA },           //  4 
+	{ "223-c3.c3",    0x400000, 0xca00191f, 3 | BRF_GRA },           //  5 
+	{ "223-c4.c4",    0x400000, 0x1f23d860, 3 | BRF_GRA },           //  6 
+	{ "223-c5.c5",    0x400000, 0x321e362c, 3 | BRF_GRA },           //  7 
+	{ "223-c6.c6",    0x400000, 0xd8fcef90, 3 | BRF_GRA },           //  8 
+	{ "223-c7.c7",    0x400000, 0xbc80dd2d, 3 | BRF_GRA },           //  9 
+	{ "223-c8.c8",    0x400000, 0x5ad62102, 3 | BRF_GRA },           // 10 
+
+	{ "223-m1.m1",    0x020000, 0x3fee46bf, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "223-v1.v1",    0x400000, 0x76673869, 5 | BRF_SND },           // 12 Sound data
+	{ "223-v2.v2",    0x400000, 0x7a275acd, 5 | BRF_SND },           // 13 
+	{ "223-v3.v3",    0x400000, 0x5a797fd2, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(rbffspeh, rbffspeh, neogeo)
+STD_ROM_FN(rbffspeh)
+
+struct BurnDriver BurnDrvrbffspeh = {
+	"rbffspeh", "rbffspec", "neogeo", NULL, "1996",
+	"Real Bout Fatal Fury Special (Hidden Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_FATFURY,
+	NULL, rbffspehRomInfo, rbffspehRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Twinkle Star Sprites (Hidden Hack)
+
+static struct BurnRomInfo twinsprhRomDesc[] = {
+	{ "224-p1h.p1",   0x200000, 0xdf71c8cd, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "224-s1.s1",    0x020000, 0xeeed5758, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "224-c1.c1",    0x400000, 0xf7da64ab, 3 | BRF_GRA },           //  2 Sprite data
+	{ "224-c2.c2",    0x400000, 0x4c09bbfb, 3 | BRF_GRA },           //  3 
+	{ "224-c3.c3",    0x100000, 0xc59e4129, 3 | BRF_GRA },           //  4 
+	{ "224-c4.c4",    0x100000, 0xb5532e53, 3 | BRF_GRA },           //  5 
+
+	{ "224-m1.m1",    0x020000, 0x364d6f96, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code
+
+	{ "224-v1.v1",    0x400000, 0xff57f088, 5 | BRF_SND },           //  7 Sound data
+	{ "224-v2.v2",    0x200000, 0x7ad26599, 5 | BRF_SND },           //  8 
+};
+
+STDROMPICKEXT(twinsprh, twinsprh, neogeo)
+STD_ROM_FN(twinsprh)
+
+struct BurnDriver BurnDrvtwinsprh = {
+	"twinsprh", "twinspri", "neogeo", NULL, "1996",
+	"Twinkle Star Sprites (Hidden Hack)\0", "Hack", "ADK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VERSHOOT, 0,
+	NULL, twinsprhRomInfo, twinsprhRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Waku Waku 7 (Hidden Hack)
+
+static struct BurnRomInfo wakuwa7hRomDesc[] = {
+	{ "225-p1h.p1",   0x100000, 0x0b7a3776, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "225-p2.sp2",   0x200000, 0xfe190665, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "225-s1.s1",    0x020000, 0x71c4b4b5, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "225-c1.c1",    0x400000, 0xee4fea54, 3 | BRF_GRA },           //  3 Sprite data
+	{ "225-c2.c2",    0x400000, 0x0c549e2d, 3 | BRF_GRA },           //  4 
+	{ "225-c3.c3",    0x400000, 0xaf0897c0, 3 | BRF_GRA },           //  5 
+	{ "225-c4.c4",    0x400000, 0x4c66527a, 3 | BRF_GRA },           //  6 
+	{ "225-c5.c5",    0x400000, 0x8ecea2b5, 3 | BRF_GRA },           //  7 
+	{ "225-c6.c6",    0x400000, 0x0eb11a6d, 3 | BRF_GRA },           //  8 
+
+	{ "225-m1.m1",    0x020000, 0x0634bba6, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "225-v1.v1",    0x400000, 0x6195c6b4, 5 | BRF_SND },           // 10 Sound data
+	{ "225-v2.v2",    0x400000, 0x6159c5fe, 5 | BRF_SND },           // 11 
+};
+
+STDROMPICKEXT(wakuwa7h, wakuwa7h, neogeo)
+STD_ROM_FN(wakuwa7h)
+
+struct BurnDriver BurnDrvwakuwa7h = {
+	"wakuwa7h", "wakuwak7", "neogeo", NULL, "1996",
+	"Waku Waku 7 (Hidden Hack)\0", "Hack", "Sunsoft", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, wakuwa7hRomInfo, wakuwa7hRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Breakers (Boss Hack)
+
+static struct BurnRomInfo breakerbRomDesc[] = {
+	{ "230-p1b.p1",   0x200000, 0x1d708f96, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "230-s1.s1",    0x020000, 0x076fb64c, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "230-c1.c1",    0x400000, 0x68d4ae76, 3 | BRF_GRA },           //  2 Sprite data
+	{ "230-c2.c2",    0x400000, 0xfdee05cd, 3 | BRF_GRA },           //  3 
+	{ "230-c3.c3",    0x400000, 0x645077f3, 3 | BRF_GRA },           //  4 
+	{ "230-c4.c4",    0x400000, 0x63aeb74c, 3 | BRF_GRA },           //  5 
+
+	{ "230-m1.m1",    0x020000, 0x3951a1c1, 4 | BRF_ESS | BRF_PRG }, //  6 Z80 code
+
+	{ "230-v1.v1",    0x400000, 0x7f9ed279, 5 | BRF_SND },           //  7 Sound data
+	{ "230-v2.v2",    0x400000, 0x1d43e420, 5 | BRF_SND },           //  8 
+};
+
+STDROMPICKEXT(breakerb, breakerb, neogeo)
+STD_ROM_FN(breakerb)
+
+struct BurnDriver BurnDrvbreakerb = {
+	"breakerb", "breakers", "neogeo", NULL, "1996",
+	"Breakers (Boss Hack)\0", "Hack", "Visco", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, breakerbRomInfo, breakerbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// The King of Fighters '97 (Korean, Practice Mode, Boss Hack)
+
+static struct BurnRomInfo kof97krRomDesc[] = {
+	{ "232-p1k.p1",   0x100000, 0xadf9bf77, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "232-p2k.sp2",  0x400000, 0x94434eec, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "232-s1.s1",    0x020000, 0x8514ecf5, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "232-c1k.c1",   0x800000, 0x0f89f596, 3 | BRF_GRA },           //  3 Sprite data
+	{ "232-c2k.c2",   0x800000, 0x3d1328c5, 3 | BRF_GRA },           //  4 
+	{ "232-c3.c3",    0x800000, 0x581d6618, 3 | BRF_GRA },           //  5 
+	{ "232-c4.c4",    0x800000, 0x49bb1e68, 3 | BRF_GRA },           //  6 
+	{ "232-c5k.c5",   0x400000, 0x8174fdf5, 3 | BRF_GRA },           //  7 
+	{ "232-c6k.c6",   0x400000, 0x32d5aa6a, 3 | BRF_GRA },           //  8 
+
+	{ "232-m1.m1",    0x020000, 0x45348747, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "232-v1.v1",    0x400000, 0x22a2b5b5, 5 | BRF_SND },           // 10 Sound data
+	{ "232-v2.v2",    0x400000, 0x2304e744, 5 | BRF_SND },           // 11 
+	{ "232-v3.v3",    0x400000, 0x759eb954, 5 | BRF_SND },           // 12 
+};
+
+STDROMPICKEXT(kof97kr, kof97kr, neogeo)
+STD_ROM_FN(kof97kr)
+
+struct BurnDriver BurnDrvKof97kr = {
+	"kof97kr", "kof97", "neogeo", NULL, "2005",
+	"The King of Fighters '97 (Korean, Practice Mode, Boss Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof97krRomInfo, kof97krRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// 拳皇97 狂龙版2022(简化)
+
+static struct BurnRomInfo kof97kl2022RomDesc[] = {
+	{ "232-p1kl.p1",   0x100000, 0x834dbc4a, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "232-p2kl.p2",   0x400000, 0xe5dbd06e, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "232-s1.bin",    0x020000, 0xe338d57f, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "232-c1.bin",    0x800000, 0xf17953fc, 3 | BRF_GRA },           //  3 Sprite data
+	{ "232-c2.bin",    0x800000, 0x31e98ce1, 3 | BRF_GRA },           //  4 
+	{ "232-c3.bin",    0x800000, 0x581d6618, 3 | BRF_GRA },           //  5 
+	{ "232-c4.bin",    0x800000, 0x49bb1e68, 3 | BRF_GRA },           //  6 
+	{ "232-c5.bin",    0x400000, 0x63747f0c, 3 | BRF_GRA },           //  7 
+	{ "232-c6.bin",    0x400000, 0x1c611127, 3 | BRF_GRA },           //  8 
+
+	{ "232-m1.bin",    0x020000, 0x9795c117, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "232-v1.bin",    0x400000, 0x22a2b5b5, 5 | BRF_SND },           // 10 Sound data
+	{ "232-v2.bin",    0x400000, 0x2304e744, 5 | BRF_SND },           // 11 
+	{ "232-v3.bin",    0x400000, 0x759eb954, 5 | BRF_SND },           // 12 
+	{ "232-v4.bin",    0x400000, 0xb62911b2, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(kof97kl2022, kof97kl2022, neogeo)
+STD_ROM_FN(kof97kl2022)
+
+struct BurnDriver BurnDrvkof97kl2022 = {
+	"kof97kl2022", "kof97", "neogeo", NULL, "2022",
+	"The King of Fighters '97 (kl2022 Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof97kl2022RomInfo, kof97kl2022RomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// 拳皇97 大蛇再临(简化)
+
+static struct BurnRomInfo kof97dszlRomDesc[] = {
+	{ "232-p1ds.p1",   0x100000, 0x95ce9da8, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "232-p2ds.p2",   0x400000, 0xa8670b59, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "232-s1ds.s1",   0x020000, 0x6976f2a0, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "232-c1.c1",     0x800000, 0x5f8bf0a1, 3 | BRF_GRA },           //  3 Sprite data
+	{ "232-c2.c2",     0x800000, 0xe4d45c81, 3 | BRF_GRA },           //  4
+	{ "232-c3.c3",     0x800000, 0x581d6618, 3 | BRF_GRA },           //  5
+	{ "232-c4.c4",     0x800000, 0x49bb1e68, 3 | BRF_GRA },           //  6
+	{ "232-c5.c5",     0x400000, 0x34fc4e51, 3 | BRF_GRA },           //  7
+	{ "232-c6.c6",     0x400000, 0x4ff4d47b, 3 | BRF_GRA },           //  8
+
+	{ "232-m1.m1",     0x020000, 0x45348747, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "232-v1.v1",     0x400000, 0x22a2b5b5, 5 | BRF_SND },           // 10 Sound data
+	{ "232-v2.v2",     0x400000, 0x2304e744, 5 | BRF_SND },           // 11
+	{ "232-v3.v3",     0x400000, 0x759eb954, 5 | BRF_SND },           // 12
+};
+
+STDROMPICKEXT(kof97dszl, kof97dszl, neogeo)
+STD_ROM_FN(kof97dszl)
+
+struct BurnDriver BurnDrvkof97dszl = {
+	"kof97dszl", "kof97", "neogeo", NULL, "2005",
+	"The King of Fighters '97 (dszl Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof97dszlRomInfo, kof97dszlRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// 拳皇97 白罗再起(简化)
+
+static struct BurnRomInfo kof97dszl2RomDesc[] = {
+	{ "232-p1ds.p1",   0x100000, 0x2d25022b, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "232-p2ds.p2",   0x400000, 0xe6f6de73, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "232-s1ds.s1",   0x020000, 0x6976f2a0, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "232-c1ds.c1",   0x800000, 0xfdfa1933, 3 | BRF_GRA },           //  3 Sprite data
+	{ "232-c2ds.c2",   0x800000, 0xebd8a2c0, 3 | BRF_GRA },           //  4 
+	{ "232-c3.c3",     0x800000, 0x581d6618, 3 | BRF_GRA },           //  5
+	{ "232-c4.c4",     0x800000, 0x49bb1e68, 3 | BRF_GRA },           //  6
+	{ "232-c5.c5",     0x400000, 0x34fc4e51, 3 | BRF_GRA },           //  7
+	{ "232-c6.c6",     0x400000, 0x4ff4d47b, 3 | BRF_GRA },           //  8
+
+	{ "232-m1.m1",     0x020000, 0x45348747, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "232-v1.v1",     0x400000, 0x22a2b5b5, 5 | BRF_SND },           // 10 Sound data
+	{ "232-v2.v2",     0x400000, 0x2304e744, 5 | BRF_SND },           // 11
+	{ "232-v3.v3",     0x400000, 0x759eb954, 5 | BRF_SND },           // 12
+};
+
+STDROMPICKEXT(kof97dszl2, kof97dszl2, neogeo)
+STD_ROM_FN(kof97dszl2)
+
+struct BurnDriver BurnDrvkof97dszl2 = {
+	"kof97dszl2", "kof97", "neogeo", NULL, "2005",
+	"The King of Fighters '97 (dszl2 Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof97dszl2RomInfo, kof97dszl2RomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '97 Tu She Edition (v1.2, Hack)
+
+static struct BurnRomInfo kof97tsRomDesc[] = {
+	{ "232-p1ts.p1",  0x100000, 0x9a56d828, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "232-p2ts.p2",  0x400000, 0x6aacb6f3, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "232-s1ts.s1",  0x020000, 0xa7d2ea6d, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "232-c1.c1",    0x800000, 0x5f8bf0a1, 3 | BRF_GRA },           //  3 Sprite data
+	{ "232-c2.c2",    0x800000, 0xe4d45c81, 3 | BRF_GRA },           //  4 
+	{ "232-c3.c3",    0x800000, 0x581d6618, 3 | BRF_GRA },           //  5 
+	{ "232-c4.c4",    0x800000, 0x49bb1e68, 3 | BRF_GRA },           //  6 
+	{ "232-c5ts.c5",  0x400000, 0x8174fdf5, 3 | BRF_GRA },           //  7 
+	{ "232-c6ts.c6",  0x400000, 0x32d5aa6a, 3 | BRF_GRA },           //  8 
+
+	{ "232-m1.m1",    0x020000, 0x45348747, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "232-v1.v1",    0x400000, 0x22a2b5b5, 5 | BRF_SND },           // 10 Sound data
+	{ "232-v2.v2",    0x400000, 0x2304e744, 5 | BRF_SND },           // 11 
+	{ "232-v3.v3",    0x400000, 0x759eb954, 5 | BRF_SND },           // 12 
+};
+
+STDROMPICKEXT(kof97ts, kof97ts, neogeo)
+STD_ROM_FN(kof97ts)
+
+struct BurnDriver BurnDrvKof97ts = {
+	"kof97ts", "kof97", "neogeo", NULL, "2019",
+	"The King of Fighters '97 Tu She Edition (v1.2, Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof97tsRomInfo, kof97tsRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The Last Blade / Bakumatsu Roman - Gekka no Kenshi (Hidden Hack)
+
+static struct BurnRomInfo lastbladbRomDesc[] = {
+	{ "234-p1h.p1",   0x100000, 0xdf879af3, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "234-p2.sp2",   0x400000, 0x0fdc289e, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "234-s1.s1",    0x020000, 0x95561412, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "234-c1.c1",    0x800000, 0x9f7e2bd3, 3 | BRF_GRA },           //  3 Sprite data
+	{ "234-c2.c2",    0x800000, 0x80623d3c, 3 | BRF_GRA },           //  4 
+	{ "234-c3.c3",    0x800000, 0x91ab1a30, 3 | BRF_GRA },           //  5 
+	{ "234-c4.c4",    0x800000, 0x3d60b037, 3 | BRF_GRA },           //  6 
+	{ "234-c5.c5",    0x400000, 0x1ba80cee, 3 | BRF_GRA },           //  7 
+	{ "234-c6.c6",    0x400000, 0xbeafd091, 3 | BRF_GRA },           //  8 
+
+	{ "234-m1.m1",    0x020000, 0x087628ea, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "234-v1.v1",    0x400000, 0xed66b76f, 5 | BRF_SND },           // 10 Sound data
+	{ "234-v2.v2",    0x400000, 0xa0e7f6e2, 5 | BRF_SND },           // 11 
+	{ "234-v3.v3",    0x400000, 0xa506e1e2, 5 | BRF_SND },           // 12 
+	{ "234-v4.v4",    0x400000, 0x0e34157f, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(lastbladb, lastbladb, neogeo)
+STD_ROM_FN(lastbladb)
+
+struct BurnDriver BurnDrvlastbladb = {
+	"lastbladb", "lastblad", "neogeo", NULL, "1997",
+	"The Last Blade / Bakumatsu Roman - Gekka no Kenshi (Hidden Hack)\0", "Hack", "SNK", "Neo Geo AES",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, lastbladbRomInfo, lastbladbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Puzzle De Pon! R! (Korean)
+
+static struct BurnRomInfo puzzldrkRomDesc[] = {
+	{ "235-p1.p1",    0x080000, 0xafed5de2, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "235-s1.s1",    0x020000, 0x3b13a22f, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "202-c1k.c1",   0x100000, 0xfc5e5ae7, 3 | BRF_GRA },           //  2 Sprite data		/ TC538200
+	{ "202-c2.c2",    0x100000, 0x42371307, 3 | BRF_GRA },           //  3 
+
+	{ "202-m1.m1",    0x020000, 0x9c0291ea, 4 | BRF_ESS | BRF_PRG }, //  4 Z80 code
+
+	{ "202-v1.v1",    0x080000, 0xdebeb8fb, 5 | BRF_SND },           //  5 Sound data
+};
+
+STDROMPICKEXT(puzzldrk, puzzldrk, neogeo)
+STD_ROM_FN(puzzldrk)
+
+struct BurnDriver BurnDrvpuzzldrk = {
+	"puzzldrk", "puzzledp", "neogeo", NULL, "2006",
+	"Puzzle De Pon! R! (Korean)\0", "Hack", "Taito (Visco license)", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PUZZLE, 0,
+	NULL, puzzldrkRomInfo, puzzldrkRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Real Bout Fatal Fury 2 - The Newcomers (Hidden Hack)
+
+static struct BurnRomInfo rbff2hbRomDesc[] = {
+	{ "240-p1b.p1",   0x100000, 0xd01854fa, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "240-p2b.p2",   0x400000, 0xc063193d, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "240-s1.s1",    0x020000, 0xda3b40de, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "240-c1.c1",    0x800000, 0xeffac504, 3 | BRF_GRA },           //  3 Sprite data
+	{ "240-c2.c2",    0x800000, 0xed182d44, 3 | BRF_GRA },           //  4 
+	{ "240-c3.c3",    0x800000, 0x22e0330a, 3 | BRF_GRA },           //  5 
+	{ "240-c4.c4",    0x800000, 0xc19a07eb, 3 | BRF_GRA },           //  6 
+	{ "240-c5b.c5",   0x800000, 0x21831787, 3 | BRF_GRA },           //  7 
+	{ "240-c6b.c6",   0x800000, 0x06b2d1da, 3 | BRF_GRA },           //  8 
+
+	{ "240-m1.m1",    0x040000, 0xed482791, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "240-v1.v1",    0x400000, 0xf796265a, 5 | BRF_SND },           // 10 Sound data
+	{ "240-v2.v2",    0x400000, 0x2cb3f3bb, 5 | BRF_SND },           // 11 
+	{ "240-v3.v3",    0x400000, 0x8fe1367a, 5 | BRF_SND },           // 12 
+	{ "240-v4.v4",    0x200000, 0x996704d8, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(rbff2hb, rbff2hb, neogeo)
+STD_ROM_FN(rbff2hb)
+
+struct BurnDriver BurnDrvrbff2hb = {
+	"rbff2hb", "rbff2", "neogeo", NULL, "1998",
+	"Real Bout Fatal Fury 2 - The Newcomers (Hidden Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_FATFURY,
+	NULL, rbff2hbRomInfo, rbff2hbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// 拳皇98 里卢 仿98um加强版 2022 (终极简化)
+
+static struct BurnRomInfo kof98umrugalRomDesc[] = {
+	{ "242-pn1.p1",   0x100000, 0x3ef7c9ed, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "242-p2.sp2",   0x400000, 0x82a81e8c, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "242-s1.s1",    0x020000, 0x554c4b66, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "242-c1.c1",    0x800000, 0x6b458741, 3 | BRF_GRA },           //  3 Sprite data
+	{ "242-c2.c2",    0x800000, 0x3723515e, 3 | BRF_GRA },           //  4 
+	{ "242-c3.c3",    0x800000, 0x22127b4f, 3 | BRF_GRA },           //  5 
+	{ "242-c4.c4",    0x800000, 0x0b4fa044, 3 | BRF_GRA },           //  6 
+	{ "242-c5.c5",    0x800000, 0x9d10bed3, 3 | BRF_GRA },           //  7 
+	{ "242-c6.c6",    0x800000, 0xda07b6a2, 3 | BRF_GRA },           //  8 
+	{ "242-c7.c7",    0x800000, 0xbf1810e5, 3 | BRF_GRA },           //  9 
+	{ "242-c8.c8",    0x800000, 0x7919b330, 3 | BRF_GRA },           // 10 
+
+	{ "242-mg1.m1",   0x040000, 0x4e7a6b1b, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "242-v1.v1",    0x400000, 0xb9ea8051, 5 | BRF_SND },           // 12 Sound data
+	{ "242-v2.v2",    0x400000, 0xcc11106e, 5 | BRF_SND },           // 13 
+	{ "242-v3.v3",    0x400000, 0x044ea4e1, 5 | BRF_SND },           // 14 
+	{ "242-v4.v4",    0x400000, 0x7985ea30, 5 | BRF_SND },           // 15 
+};
+
+STDROMPICKEXT(kof98umrugal, kof98umrugal, neogeo)
+STD_ROM_FN(kof98umrugal)
+
+struct BurnDriver BurnDrvkof98umrugal = {
+	"kof98umrugal", "kof98", "neogeo", NULL, "1998",
+	"The King of Fighters '98 Umrugal (HACKJH)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof98umrugalRomInfo, kof98umrugalRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '98 终极版 (20220207)简化
+
+static struct BurnRomInfo kof98urRomDesc[] = {
+	{ "kof98ur-p1.bin",  0x100000, 0x74f4a475, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "kof98ur-p2.bin",  0x400000, 0x4c1066d6, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "242-s1.s1",       0x020000, 0x7f7b4805, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "242-c1.c1",       0x800000, 0xe564ecd6, 3 | BRF_GRA },           //  3 Sprite data
+	{ "242-c2.c2",       0x800000, 0xbd959b60, 3 | BRF_GRA },           //  4 
+	{ "242-c3.c3",       0x800000, 0x22127b4f, 3 | BRF_GRA },           //  5 
+	{ "242-c4.c4",       0x800000, 0x0b4fa044, 3 | BRF_GRA },           //  6 
+	{ "242-c5.c5",       0x800000, 0x9d10bed3, 3 | BRF_GRA },           //  7 
+	{ "242-c6.c6",       0x800000, 0xda07b6a2, 3 | BRF_GRA },           //  8 
+	{ "242-c7.c7",       0x800000, 0xf6d7a38a, 3 | BRF_GRA },           //  9 
+	{ "242-c8.c8",       0x800000, 0xc823e045, 3 | BRF_GRA },           // 10 
+
+	{ "242-mg1.m1",      0x040000, 0x4e7a6b1b, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "242-v1.v1",       0x400000, 0xb9ea8051, 5 | BRF_SND },           // 12 Sound data
+	{ "242-v2.v2",       0x400000, 0xcc11106e, 5 | BRF_SND },           // 13 
+	{ "242-v3.v3",       0x400000, 0x044ea4e1, 5 | BRF_SND },           // 14 
+	{ "242-v4.v4",       0x400000, 0x7985ea30, 5 | BRF_SND },           // 15 
+};
+
+STDROMPICKEXT(kof98ur, kof98ur, neogeo)
+STD_ROM_FN(kof98ur)
+
+struct BurnDriver BurnDrvkof98ur = {
+	"kof98ur", "kof98", "neogeo", NULL, "2022",
+	"The King of Fighters '98 Ultimate Edition(Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof98urRomInfo, kof98urRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// 拳皇 '99 八神仿屠蛇
+
+static struct BurnRomInfo kof99ptsRomDesc[] = {
+	{ "251-p1p.bin",  0x100000, 0x402d7572, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "251-p2p.bin",  0x400000, 0xc12c8274, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "251-s1p.bin",  0x020000, 0x8969b496, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "251-c1p.bin",  0x800000, 0x0f8cbfba, 3 | BRF_GRA },           //  3 Sprite data
+	{ "251-c2p.bin",  0x800000, 0x1232d8c0, 3 | BRF_GRA },           //  4 
+	{ "251-c3p.bin",    0x800000, 0xf20959e8, 3 | BRF_GRA },           //  5 
+	{ "251-c4p.bin",    0x800000, 0x54ffbe9f, 3 | BRF_GRA },           //  6 
+	{ "251-c5p.bin",    0x800000, 0xd87a3bbc, 3 | BRF_GRA },           //  7 
+	{ "251-c6p.bin",    0x800000, 0x4d40a691, 3 | BRF_GRA },           //  8 
+	{ "251-c7p.bin",    0x800000, 0x5fcba18d, 3 | BRF_GRA },           //  9 
+	{ "251-c8p.bin",    0x800000, 0xbc2531f1, 3 | BRF_GRA },           // 10 
+
+	{ "251-m1.bin",   0x020000, 0xf847e188, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "251-v1.bin",    0x400000, 0x4ae46226, 5 | BRF_SND },           // 12 Sound data
+	{ "251-v2.bin",    0x400000, 0x07d70650, 5 | BRF_SND },           // 13 
+	{ "251-v3.bin",    0x400000, 0x821901da, 5 | BRF_SND },           // 14 
+	{ "251-v4.bin",    0x200000, 0xb49e6178, 5 | BRF_SND },           // 15 
+};
+
+STDROMPICKEXT(kof99pts, kof99pts, neogeo)
+STD_ROM_FN(kof99pts)
+
+struct BurnDriver BurnDrvkof99pts = {
+	"kof99pts", "kof99", "neogeo", NULL, "2022",
+	"The King of Fighters '99 Eight gods imitating killing snake(Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof99ptsRomInfo, kof99ptsRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The Last Blade 2 (Hidden Hack)
+
+static struct BurnRomInfo lastbl2hRomDesc[] = {
+	{ "243-p1h.p1",   0x100000, 0x8af4b6e2, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "243-p2h.p2",   0x400000, 0xeef07572, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "243-s1.s1",    0x020000, 0xc9cd2298, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "243-c1.c1",    0x800000, 0x5839444d, 3 | BRF_GRA },           //  3 Sprite data
+	{ "243-c2.c2",    0x800000, 0xdd087428, 3 | BRF_GRA },           //  4 
+	{ "243-c3.c3",    0x800000, 0x6054cbe0, 3 | BRF_GRA },           //  5 
+	{ "243-c4.c4",    0x800000, 0x8bd2a9d2, 3 | BRF_GRA },           //  6 
+	{ "243-c5.c5",    0x800000, 0x6a503dcf, 3 | BRF_GRA },           //  7 
+	{ "243-c6.c6",    0x800000, 0xec9c36d0, 3 | BRF_GRA },           //  8 
+
+	{ "243-m1.m1",    0x020000, 0xacf12d10, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "243-v1.v1",    0x400000, 0xf7ee6fbb, 5 | BRF_SND },           // 10 Sound data
+	{ "243-v2.v2",    0x400000, 0xaa9e4df6, 5 | BRF_SND },           // 11 
+	{ "243-v3.v3",    0x400000, 0x4ac750b2, 5 | BRF_SND },           // 12 
+	{ "243-v4.v4",    0x400000, 0xf5c64ba6, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(lastbl2h, lastbl2h, neogeo)
+STD_ROM_FN(lastbl2h)
+
+struct BurnDriver BurnDrvlastbl2h = {
+	"lastbl2h", "lastbld2", "neogeo", NULL, "1998",
+	"The Last Blade 2 (Hidden Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, lastbl2hRomInfo, lastbl2hRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// The Last Blade 2 (System Bugs Fix)
+
+static struct BurnRomInfo lastbl2fRomDesc[] = {
+	{ "243-p1f.p1",   0x100000, 0x4fbc1019, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "243-p2f.p2",   0x400000, 0xad489305, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "243-s1.s1",    0x020000, 0xc9cd2298, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "243-c1.c1",    0x800000, 0x5839444d, 3 | BRF_GRA },           //  3 Sprite data
+	{ "243-c2.c2",    0x800000, 0xdd087428, 3 | BRF_GRA },           //  4 
+	{ "243-c3.c3",    0x800000, 0x6054cbe0, 3 | BRF_GRA },           //  5 
+	{ "243-c4.c4",    0x800000, 0x8bd2a9d2, 3 | BRF_GRA },           //  6 
+	{ "243-c5.c5",    0x800000, 0x6a503dcf, 3 | BRF_GRA },           //  7 
+	{ "243-c6.c6",    0x800000, 0xec9c36d0, 3 | BRF_GRA },           //  8 
+
+	{ "243-m1.m1",    0x020000, 0xacf12d10, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "243-v1.v1",    0x400000, 0xf7ee6fbb, 5 | BRF_SND },           // 10 Sound data
+	{ "243-v2.v2",    0x400000, 0xaa9e4df6, 5 | BRF_SND },           // 11 
+	{ "243-v3.v3",    0x400000, 0x4ac750b2, 5 | BRF_SND },           // 12 
+	{ "243-v4.v4",    0x400000, 0xf5c64ba6, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(lastbl2f, lastbl2f, neogeo)
+STD_ROM_FN(lastbl2f)
+
+struct BurnDriver BurnDrvlastbl2f = {
+	"lastbl2f", "lastbld2", "neogeo", NULL, "1998",
+	"The Last Blade 2 (System Bugs Fix)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, lastbl2fRomInfo, lastbl2fRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Neo-Geo Cup '98 - The Road to the Victory (Korean)
+
+static struct BurnRomInfo neocu98kRomDesc[] = {
+	{ "244-p1k.p1",   0x200000, 0x130a8029, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "244-s1k.s1",   0x020000, 0xbecb9e7a, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "244-c1k.c1",   0x800000, 0x8505fa3e, 3 | BRF_GRA },           //  2 Sprite data
+	{ "244-c2k.c2",   0x800000, 0x54e86379, 3 | BRF_GRA },           //  3 
+
+	{ "244-m1.m1",    0x020000, 0xa701b276, 4 | BRF_ESS | BRF_PRG }, //  4 Z80 code
+
+	{ "244-v1.v1",    0x400000, 0x79def46d, 5 | BRF_SND },           //  5 Sound data
+	{ "244-v2.v2",    0x200000, 0xb231902f, 5 | BRF_SND },           //  6 
+};
+
+STDROMPICKEXT(neocu98k, neocu98k, neogeo)
+STD_ROM_FN(neocu98k)
+
+struct BurnDriver BurnDrvNeocu98k = {
+	"neocu98k", "neocup98", "neogeo", NULL, "2006",
+	"Neo-Geo Cup '98 - The Road to the Victory (Korean)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_SPORTSFOOTBALL, 0,
+	NULL, neocu98kRomInfo, neocu98kRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Breakers Revenge (Boss Hack)
+
+static struct BurnRomInfo breakrebRomDesc[] = {
+	{ "245-p1b.p1",   0x200000, 0x52c978b5, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "245-s1.s1",    0x020000, 0xe7660a5d, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "245-c1.c1",    0x400000, 0x68d4ae76, 3 | BRF_GRA },           //  2 Sprite data
+	{ "245-c2.c2",    0x400000, 0xfdee05cd, 3 | BRF_GRA },           //  3 
+	{ "245-c3.c3",    0x400000, 0x645077f3, 3 | BRF_GRA },           //  4 
+	{ "245-c4.c4",    0x400000, 0x63aeb74c, 3 | BRF_GRA },           //  5 
+	{ "245-c5.c5",    0x400000, 0xb5f40e7f, 3 | BRF_GRA },           //  6 
+	{ "245-c6.c6",    0x400000, 0xd0337328, 3 | BRF_GRA },           //  7 
+
+	{ "245-m1.m1",    0x020000, 0x00f31c66, 4 | BRF_ESS | BRF_PRG }, //  8 Z80 code
+
+	{ "245-v1.v1",    0x400000, 0xe255446c, 5 | BRF_SND },           //  9 Sound data
+	{ "245-v2.v2",    0x400000, 0x9068198a, 5 | BRF_SND },           // 10 
+};
+
+STDROMPICKEXT(breakreb, breakreb, neogeo)
+STD_ROM_FN(breakreb)
+
+struct BurnDriver BurnDrvbreakreb = {
+	"breakreb", "breakrev", "neogeo", NULL, "1998",
+	"Breakers Revenge (Boss Hack)\0", "Hack", "Visco", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_SWAPP, GBF_VSFIGHT, 0,
+	NULL, breakrebRomInfo, breakrebRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Battle Flip Shot (Korean)
+
+static struct BurnRomInfo flipshtkRomDesc[] = {
+	{ "247-p1.p1",    0x100000, 0x95779094, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "247-s1.s1",    0x020000, 0x6300185c, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "247-c1k.c1",   0x200000, 0x1ccfeff9, 3 | BRF_GRA },           //  2 Sprite data
+	{ "247-c2k.c2",   0x200000, 0x648cdd5d, 3 | BRF_GRA },           //  3 
+
+	{ "247-m1.m1",    0x020000, 0xa9fe0144, 4 | BRF_ESS | BRF_PRG }, //  4 Z80 code
+
+	{ "247-v1.v1",    0x200000, 0x42ec743d, 5 | BRF_SND },           //  5 Sound data
+};
+
+STDROMPICKEXT(flipshtk, flipshtk, neogeo)
+STD_ROM_FN(flipshtk)
+
+struct BurnDriver BurnDrvflipshtk = {
+	"flipshtk", "flipshot", "neogeo", NULL, "2005",
+	"Battle Flip Shot (Korean)\0", "Hack", "Visco", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_BALLPADDLE, 0,
+	NULL, flipshtkRomInfo, flipshtkRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '99 - Millennium Battle (Fully Decrypted, System Bugs Fix)
+
+static struct BurnRomInfo kof99ndRomDesc[] = {
+	{ "251-p1d.p1",  0x100000, 0xcfb4b521, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 
+	{ "251-p2d.p2",  0x400000, 0xa4afaa86, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "251-c1d.c1",  0x800000, 0xb3d88546, 3 | BRF_GRA },           //  2 Sprite data
+	{ "251-c2d.c2",  0x800000, 0x915c8634, 3 | BRF_GRA },           //  3 
+	{ "251-c3d.c3",  0x800000, 0xb047c9d5, 3 | BRF_GRA },           //  4 
+	{ "251-c4d.c4",  0x800000, 0x6bc8e4b1, 3 | BRF_GRA },           //  5 
+	{ "251-c5d.c5",  0x800000, 0x9746268c, 3 | BRF_GRA },           //  6 
+	{ "251-c6d.c6",  0x800000, 0x238b3e71, 3 | BRF_GRA },           //  7 
+	{ "251-c7d.c7",  0x800000, 0x2f68fdeb, 3 | BRF_GRA },           //  8 
+	{ "251-c8d.c8",  0x800000, 0x4c2fad1e, 3 | BRF_GRA },           //  9 
+
+	{ "251-m1.m1",   0x020000, 0x5e74539c, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "251-v1.v1",   0x400000, 0xef2eecc8, 5 | BRF_SND },           // 11 Sound data
+	{ "251-v2.v2",   0x400000, 0x73e211ca, 5 | BRF_SND },           // 12 
+	{ "251-v3.v3",   0x400000, 0x821901da, 5 | BRF_SND },           // 13 
+	{ "251-v4.v4",   0x200000, 0xb49e6178, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof99nd, kof99nd, neogeo)
+STD_ROM_FN(kof99nd)
+
+struct BurnDriver BurnDrvkof99nd = {
+	"kof99nd", "kof99", "neogeo", NULL, "1999",
+	"The King of Fighters '99 - Millennium Battle (Fully Decrypted, System Bugs Fix)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof99ndRomInfo, kof99ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '99 - Millennium Battle (Korean, DreamCast Verson 1.2f)
+
+static struct BurnRomInfo kof99krRomDesc[] = {
+	{ "251-p1kr.p1", 0x100000, 0xbbb04bc2, 1 | BRF_ESS | BRF_PRG }, //  0 68K code 
+	{ "251-p2kr.p2", 0x400000, 0xcedba0c0, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "251-c1kr.c1", 0x800000, 0x5dea7ea8, 3 | BRF_GRA },           //  2 Sprite data
+	{ "251-c2kr.c2", 0x800000, 0x5e218d5a, 3 | BRF_GRA },           //  3 
+	{ "251-c3d.c3",  0x800000, 0xb047c9d5, 3 | BRF_GRA },           //  4 
+	{ "251-c4d.c4",  0x800000, 0x6bc8e4b1, 3 | BRF_GRA },           //  5 
+	{ "251-c5d.c5",  0x800000, 0x9746268c, 3 | BRF_GRA },           //  6 
+	{ "251-c6d.c6",  0x800000, 0x238b3e71, 3 | BRF_GRA },           //  7 
+	{ "251-c7kr.c7", 0x800000, 0x165607a2, 3 | BRF_GRA },           //  8 
+	{ "251-c8kr.c8", 0x800000, 0x720c9304, 3 | BRF_GRA },           //  9 
+
+	{ "251-m1.m1",   0x020000, 0x5e74539c, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "251-v1.v1",   0x400000, 0xef2eecc8, 5 | BRF_SND },           // 11 Sound data
+	{ "251-v2.v2",   0x400000, 0x73e211ca, 5 | BRF_SND },           // 12 
+	{ "251-v3.v3",   0x400000, 0x821901da, 5 | BRF_SND },           // 13 
+	{ "251-v4.v4",   0x200000, 0xb49e6178, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof99kr, kof99kr, neogeo)
+STD_ROM_FN(kof99kr)
+
+struct BurnDriver BurnDrvkof99kr = {
+	"kof99kr", "kof99", "neogeo", NULL, "2006",
+	"The King of Fighters '99 - Millennium Battle (Korean, DreamCast Verson 1.2f)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof99krRomInfo, kof99krRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters '99 (15th Anniversary Edition 2016)
+/* Yashional hack - 2016/04/19 version */
+static struct BurnRomInfo kof99ae2016RomDesc[] = {
+	{ "199-p1.bin",   0x100000, 0xc19447eb, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "199-p2.bin",   0x800000, 0x55418995, 1 | BRF_ESS | BRF_PRG }, //  1
+
+	{ "199-s1.bin",   0x020000, 0x3c31ee43, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "199-c1.bin",   0x800000, 0x497c2e83, 3 | BRF_GRA },           //  3 Sprite data
+	{ "199-c2.bin",   0x800000, 0x0a13eeb7, 3 | BRF_GRA },           //  4 
+	{ "251-c3d.bin",  0x800000, 0xb047c9d5, 3 | BRF_GRA },           //  5 
+	{ "251-c4d.bin",  0x800000, 0x6bc8e4b1, 3 | BRF_GRA },           //  6 
+	{ "251-c5d.bin",  0x800000, 0x9746268c, 3 | BRF_GRA },           //  7 
+	{ "251-c6d.bin",  0x800000, 0x238b3e71, 3 | BRF_GRA },           //  8 
+	{ "199-c7.bin",   0x800000, 0xf22760ad, 3 | BRF_GRA },           //  9 
+	{ "199-c8.bin",   0x800000, 0x396c3a70, 3 | BRF_GRA },           // 10 
+	{ "199-c9.bin",   0x800000, 0x86a3550d, 3 | BRF_GRA },           // 11 
+	{ "199-ca.bin",   0x800000, 0x986bb897, 3 | BRF_GRA },           // 12 
+	{ "199-cb.bin",   0x800000, 0x7fe785c2, 3 | BRF_GRA },           // 13 
+	{ "199-cc.bin",   0x800000, 0xa7541483, 3 | BRF_GRA },           // 14 
+
+	{ "199-m1.bin",   0x020000, 0xf847e188, 4 | BRF_ESS | BRF_PRG }, // 15 Z80 code
+
+	{ "199-v1.bin",   0x400000, 0xceaa3bae, 5 | BRF_SND },           // 16 Sound data
+	{ "199-v2.bin",   0x400000, 0x07d70650, 5 | BRF_SND },           // 17 
+	{ "251-v3.v3",    0x400000, 0x821901da, 5 | BRF_SND },           // 18 
+	{ "251-v4.v4",    0x200000, 0xb49e6178, 5 | BRF_SND },           // 19 
+};
+
+STDROMPICKEXT(kof99ae2016, kof99ae2016, neogeo)
+STD_ROM_FN(kof99ae2016)
+
+struct BurnDriver BurnDrvkof99ae2016 = {
+	"kof99ae2016", "kof99", "neogeo", NULL, "2015",
+	"The King of Fighters '99 (15th Anniversary Edition 2016)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof99ae2016RomInfo, kof99ae2016RomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Ganryu (Fully Decrypted)
+
+static struct BurnRomInfo ganryundRomDesc[] = {
+	{ "252-p1d.p1",  0x200000, 0x8f212084, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "252-c1d.c1",  0x800000, 0x6bf7605b, 3 | BRF_GRA },           //  1 Sprite data
+	{ "252-c2d.c2",  0x800000, 0x596792ce, 3 | BRF_GRA },           //  2 
+
+	{ "252-m1.m1",    0x020000, 0x30cc4099, 4 | BRF_ESS | BRF_PRG }, //  3 Z80 code
+
+	{ "252-v1.v1",    0x400000, 0xe5946733, 5 | BRF_SND },           //  4 Sound data
+};
+
+STDROMPICKEXT(ganryund, ganryund, neogeo)
+STD_ROM_FN(ganryund)
+
+struct BurnDriver BurnDrvganryund = {
+	"ganryund", "ganryu", "neogeo", NULL, "1999",
+	"Ganryu (Fully Decrypted)\0", NULL, "Visco", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PLATFORM, 0,
+	NULL, ganryundRomInfo, ganryundRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Strikers 1945 Plus (Fully Decrypted)
+
+static struct BurnRomInfo s1945pndRomDesc[] = {
+	{ "254-p1.p1",   0x100000, 0xff8efcff, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "254-p2.sp2",  0x400000, 0xefdfd4dd, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "254-c1d.c1",  0x800000, 0x7b6902f9, 3 | BRF_GRA },           //  2 Sprite data
+	{ "254-c2d.c2",  0x800000, 0x51bd4252, 3 | BRF_GRA },           //  3 
+	{ "254-c3d.c3",  0x800000, 0xa38993e4, 3 | BRF_GRA },           //  4 
+	{ "254-c4d.c4",  0x800000, 0xd5696530, 3 | BRF_GRA },           //  5 
+	{ "254-c5d.c5",  0x800000, 0x28764bd6, 3 | BRF_GRA },           //  6 
+	{ "254-c6d.c6",  0x800000, 0x9931bdf1, 3 | BRF_GRA },           //  7 
+	{ "254-c7d.c7",  0x800000, 0x6e12afcd, 3 | BRF_GRA },           //  8 
+	{ "254-c8d.c8",  0x800000, 0x178d4684, 3 | BRF_GRA },           //  9 
+
+	{ "254-m1.m1",   0x020000, 0x994b4487, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "254-v1.v1",   0x400000, 0x844f58fb, 5 | BRF_SND },           // 11 Sound data
+	{ "254-v2.v2",   0x400000, 0xd9a248f0, 5 | BRF_SND },           // 12 
+	{ "254-v3.v3",   0x400000, 0x0b0d2d33, 5 | BRF_SND },           // 13 
+	{ "254-v4.v4",   0x400000, 0x6d13dc91, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(s1945pnd, s1945pnd, neogeo)
+STD_ROM_FN(s1945pnd)
+
+struct BurnDriver BurnDrvs1945pnd = {
+	"s1945pnd", "s1945p", "neogeo", NULL, "1999",
+	"Strikers 1945 Plus (Fully Decrypted)\0", NULL, "Psikyo", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VERSHOOT, 0,
+	NULL, s1945pndRomInfo, s1945pndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Prehistoric Isle 2 (Fully Decrypted)
+
+static struct BurnRomInfo pisle2ndRomDesc[] = {
+	{ "255-p1.p1",   0x100000, 0xdfa3c0f3, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "255-p2.sp2",  0x400000, 0x42050b80, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "255-c1d.c1",  0x800000, 0x50fd785e, 3 | BRF_GRA },           //  2 Sprite data
+	{ "255-c2d.c2",  0x800000, 0xab913f1e, 3 | BRF_GRA },           //  3 
+	{ "255-c3d.c3",  0x800000, 0xbc0ee75c, 3 | BRF_GRA },           //  4 
+	{ "255-c4d.c4",  0x800000, 0x29908823, 3 | BRF_GRA },           //  5 
+	{ "255-c5d.c5",  0x800000, 0x83c56bca, 3 | BRF_GRA },           //  6 
+	{ "255-c6d.c6",  0x800000, 0x59e0e805, 3 | BRF_GRA },           //  7 
+
+	{ "255-m1.m1",   0x020000, 0x8efd4014, 4 | BRF_ESS | BRF_PRG }, //  8 Z80 code
+
+	{ "255-v1.v1",   0x400000, 0x5a14543d, 5 | BRF_SND },           //  9 Sound data
+	{ "255-v2.v2",   0x200000, 0x6610d91a, 5 | BRF_SND },           // 10 
+};
+
+STDROMPICKEXT(pisle2nd, pisle2nd, neogeo)
+STD_ROM_FN(pisle2nd)
+
+struct BurnDriver BurnDrvpisle2nd = {
+	"pisle2nd", "preisle2", "neogeo", NULL, "1999",
+	"Prehistoric Isle 2 (Fully Decrypted)\0", NULL, "Yumekobo", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_HORSHOOT, 0,
+	NULL, pisle2ndRomInfo, pisle2ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Metal Slug 3 (Fully Decrypted)
+
+static struct BurnRomInfo mslug3ndRomDesc[] = {
+	{ "256-p1d.p1",  0x100000, 0x9c42ca85, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "256-p2d.p2",  0x400000, 0x1f3d8ce8, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "256-c1d.c1",  0x800000, 0x3540398c, 3 | BRF_GRA },           //  2 Sprite data
+	{ "256-c2d.c2",  0x800000, 0xbdd220f0, 3 | BRF_GRA },           //  3
+	{ "256-c3d.c3",  0x800000, 0xbfaade82, 3 | BRF_GRA },           //  4
+	{ "256-c4d.c4",  0x800000, 0x1463add6, 3 | BRF_GRA },           //  5
+	{ "256-c5d.c5",  0x800000, 0x48ca7f28, 3 | BRF_GRA },           //  6
+	{ "256-c6d.c6",  0x800000, 0x806eb36f, 3 | BRF_GRA },           //  7
+	{ "256-c7d.c7",  0x800000, 0x9395b809, 3 | BRF_GRA },           //  8
+	{ "256-c8d.c8",  0x800000, 0xa369f9d4, 3 | BRF_GRA },           //  9
+
+	{ "256-m1d.m1",  0x040000, 0x2f88e0c0, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "256-v1.v1",   0x400000, 0xf2690241, 5 | BRF_SND },           // 11 Sound data
+	{ "256-v2.v2",   0x400000, 0x7e2a10bd, 5 | BRF_SND },           // 12
+	{ "256-v3.v3",   0x400000, 0x0eaec17c, 5 | BRF_SND },           // 13
+	{ "256-v4.v4",   0x400000, 0x9b4b22d4, 5 | BRF_SND },           // 14
+};
+
+STDROMPICKEXT(mslug3nd, mslug3nd, neogeo)
+STD_ROM_FN(mslug3nd)
+
+struct BurnDriver BurnDrvmslug3nd = {
+	"mslug3nd", "mslug3", "neogeo", NULL, "2000",
+	"Metal Slug 3 (Fully Decrypted)\0", NULL, "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PLATFORM, FBF_MSLUG,
+	NULL, mslug3ndRomInfo, mslug3ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	mslug3ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters 2000 (Fully Decrypted)
+
+static struct BurnRomInfo kof2kndRomDesc[] = {
+	{ "257-p1d.p1",  0x100000, 0x5f809dbe, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "257-p2d.p2",  0x400000, 0x693c2c5e, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "257-c1d.c1",  0x800000, 0xabcdd424, 3 | BRF_GRA },           //  2 Sprite data
+	{ "257-c2d.c2",  0x800000, 0xcda33778, 3 | BRF_GRA },           //  3 
+	{ "257-c3d.c3",  0x800000, 0x087fb15b, 3 | BRF_GRA },           //  4 
+	{ "257-c4d.c4",  0x800000, 0xfe9dfde4, 3 | BRF_GRA },           //  5 
+	{ "257-c5d.c5",  0x800000, 0x03ee4bf4, 3 | BRF_GRA },           //  6 
+	{ "257-c6d.c6",  0x800000, 0x8599cc5b, 3 | BRF_GRA },           //  7 
+	{ "257-c7d.c7",  0x800000, 0x93c343ec, 3 | BRF_GRA },           //  8 
+	{ "257-c8d.c8",  0x800000, 0xba92f698, 3 | BRF_GRA },           //  9 
+
+	{ "257-m1d.m1",  0x040000, 0xd404db70, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "257-v1.v1",   0x400000, 0x17cde847, 5 | BRF_SND },           // 11 Sound data
+	{ "257-v2.v2",   0x400000, 0x1afb20ff, 5 | BRF_SND },           // 12 
+	{ "257-v3.v3",   0x400000, 0x4605036a, 5 | BRF_SND },           // 13 
+	{ "257-v4.v4",   0x400000, 0x764bbd6b, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof2knd, kof2knd, neogeo)
+STD_ROM_FN(kof2knd)
+
+struct BurnDriver BurnDrvkof2knd = {
+	"kof2knd", "kof2000", "neogeo", NULL, "2000",
+	"The King of Fighters 2000 (Fully Decrypted)\0", NULL, "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2kndRomInfo, kof2kndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters 2000 (Korean, PlayStation 2 Hack)
+
+static struct BurnRomInfo kof2kkrRomDesc[] = {
+	{ "257-p1kr.p1", 0x100000, 0xa8526ab2, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "257-p2kr.p2", 0x400000, 0xcf9d9e39, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "257-c1kr.c1", 0x800000, 0xe5773336, 3 | BRF_GRA },           //  2 Sprite data
+	{ "257-c2kr.c2", 0x800000, 0x654c2a61, 3 | BRF_GRA },           //  3 
+	{ "257-c3d.c3",  0x800000, 0x087fb15b, 3 | BRF_GRA },           //  4 
+	{ "257-c4d.c4",  0x800000, 0xfe9dfde4, 3 | BRF_GRA },           //  5 
+	{ "257-c5d.c5",  0x800000, 0x03ee4bf4, 3 | BRF_GRA },           //  6 
+	{ "257-c6d.c6",  0x800000, 0x8599cc5b, 3 | BRF_GRA },           //  7 
+	{ "257-c7kr.c7", 0x800000, 0xf6d09417, 3 | BRF_GRA },           //  8 
+	{ "257-c8kr.c8", 0x800000, 0x7aff9fba, 3 | BRF_GRA },           //  9 
+
+	{ "257-m1d.m1",  0x040000, 0xd404db70, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "257-v1.v1",   0x400000, 0x17cde847, 5 | BRF_SND },           // 11 Sound data
+	{ "257-v2.v2",   0x400000, 0x1afb20ff, 5 | BRF_SND },           // 12 
+	{ "257-v3.v3",   0x400000, 0x4605036a, 5 | BRF_SND },           // 13 
+	{ "257-v4.v4",   0x400000, 0x764bbd6b, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof2kkr, kof2kkr, neogeo)
+STD_ROM_FN(kof2kkr)
+
+struct BurnDriver BurnDrvkof2kkr = {
+	"kof2kkr", "kof2000", "neogeo", NULL, "2010",
+	"The King of Fighters 2000 (Korean, PlayStation 2 Hack)\0", "Hack", "SNK", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2kkrRomInfo, kof2kkrRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Bang Bead (Fully Decrypted)
+
+static struct BurnRomInfo bangbndRomDesc[] = {
+	{ "259-p1d.p1",  0x200000, 0x08b6b530, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "259-c1d.c1",  0x800000, 0xc50a91c3, 3 | BRF_GRA },           //  1 Sprite data
+	{ "259-c2d.c2",  0x800000, 0x820ab36e, 3 | BRF_GRA },           //  2 
+
+	{ "259-m1.m1",   0x020000, 0x85668ee9, 4 | BRF_ESS | BRF_PRG }, //  3 Z80 code
+
+	{ "259-v1.v1",   0x400000, 0x088eb8ab, 5 | BRF_SND },           //  4 Sound data
+	{ "259-v2.v2",   0x100000, 0x97528fe9, 5 | BRF_SND },           //  5 
+};
+
+STDROMPICKEXT(bangbnd, bangbnd, neogeo)
+STD_ROM_FN(bangbnd)
+
+struct BurnDriver BurnDrvbangbnd = {
+	"bangbnd", "bangbead", "neogeo", NULL, "2000",
+	"Bang Bead (Fully Decrypted)\0", NULL, "Visco", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_BALLPADDLE, 0,
+	NULL, bangbndRomInfo, bangbndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Nightmare in the Dark (Fully Decrypted)
+
+static struct BurnRomInfo nitdndRomDesc[] = {
+	{ "260-p1.p1",    0x080000, 0x61361082, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "260-c1d.c1",   0x800000, 0xf3ff4953, 3 | BRF_GRA },           //  1 Sprite data
+	{ "260-c2d.c2",   0x800000, 0xf1e49faa, 3 | BRF_GRA },           //  2 
+
+	{ "260-m1.m1",    0x080000, 0x6407c5e5, 4 | BRF_ESS | BRF_PRG }, //  3 Z80 code
+
+	{ "260-v1.v1",    0x400000, 0x24b0480c, 5 | BRF_SND },           //  4 Sound data
+};
+
+STDROMPICKEXT(nitdnd, nitdnd, neogeo)
+STD_ROM_FN(nitdnd)
+
+struct BurnDriver BurnDrvnitdnd = {
+	"nitdnd", "nitd", "neogeo", NULL, "2000",
+	"Nightmare in the Dark (Fully Decrypted)\0", NULL, "Eleven / Gavaking", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PLATFORM, 0,
+	NULL, nitdndRomInfo, nitdndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Sengoku 3 (Fully Decrypted)
+
+static struct BurnRomInfo sengo3ndRomDesc[] = {
+	{ "261-p1d.p1",  0x200000, 0x12db5c94, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "261-c1d.c1",  0x800000, 0x9af7cbca, 3 | BRF_GRA },           //  1 Sprite data
+	{ "261-c2d.c2",  0x800000, 0x2a1f874d, 3 | BRF_GRA },           //  2 
+	{ "261-c3d.c3",  0x800000, 0x5403adb5, 3 | BRF_GRA },           //  3 
+	{ "261-c4d.c4",  0x800000, 0x18926df6, 3 | BRF_GRA },           //  4 
+
+	{ "261-m1.m1",   0x080000, 0x7d501c39, 4 | BRF_ESS | BRF_PRG }, //  5 Z80 code
+
+	{ "261-v1.v1",   0x400000, 0x64c30081, 5 | BRF_SND },           //  6 Sound data
+	{ "261-v2.v2",   0x400000, 0x392a9c47, 5 | BRF_SND },           //  7 
+	{ "261-v3.v3",   0x400000, 0xc1a7ebe3, 5 | BRF_SND },           //  8 
+	{ "261-v4.v4",   0x200000, 0x9000d085, 5 | BRF_SND },           //  9 
+};
+
+STDROMPICKEXT(sengo3nd, sengo3nd, neogeo)
+STD_ROM_FN(sengo3nd)
+
+struct BurnDriver BurnDrvSengo3nd = {
+	"sengo3nd", "sengoku3", "neogeo", NULL, "2001",
+	"Sengoku 3 (Fully Decrypted)\0", NULL, "SNK / Noise Factory", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_SCRFIGHT, 0,
+	NULL, sengo3ndRomInfo, sengo3ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Sengoku 3 (Hidden Hack)
+
+static struct BurnRomInfo sengo3nhRomDesc[] = {
+	{ "261-p1h.p1",   0x200000, 0xb0ce4444, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "261-c1d.c1",   0x800000, 0x9af7cbca, 3 | BRF_GRA },           //  1 Sprite data
+	{ "261-c2d.c2",   0x800000, 0x2a1f874d, 3 | BRF_GRA },           //  2 
+	{ "261-c3d.c3",   0x800000, 0x5403adb5, 3 | BRF_GRA },           //  3 
+	{ "261-c4d.c4",   0x800000, 0x18926df6, 3 | BRF_GRA },           //  4 
+
+	{ "261-m1.m1",    0x080000, 0x7d501c39, 4 | BRF_ESS | BRF_PRG }, //  5 Z80 code
+
+	{ "261-v1.v1",    0x400000, 0x64c30081, 5 | BRF_SND },           //  6 Sound data
+	{ "261-v2.v2",    0x400000, 0x392a9c47, 5 | BRF_SND },           //  7 
+	{ "261-v3.v3",    0x400000, 0xc1a7ebe3, 5 | BRF_SND },           //  8 
+	{ "261-v4.v4",    0x200000, 0x9000d085, 5 | BRF_SND },           //  9 
+};
+
+STDROMPICKEXT(sengo3nh, sengo3nh, neogeo)
+STD_ROM_FN(sengo3nh)
+
+struct BurnDriver BurnDrvsengo3nh = {
+	"sengo3nh", "sengoku3", "neogeo", NULL, "2001",
+	"Sengoku 3 (Hidden Hack)\0", "Hack", "SNK / Noise Factory", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_SCRFIGHT, 0,
+	NULL, sengo3nhRomInfo, sengo3nhRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// The King of Fighters 2001 (Fully Decrypted)
+
+static struct BurnRomInfo kof2k1ndRomDesc[] = {
+	{ "262-p1d.p1",      0x100000, 0x138dea19, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "262-p2d.p2",      0x400000, 0xc773bf51, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "262-c1d.c1",      0x800000, 0x098aeb69, 3 | BRF_GRA },           //  2 Sprite data
+	{ "262-c2d.c2",      0x800000, 0xf9d05d99, 3 | BRF_GRA },           //  3 
+	{ "262-c3d.c3",      0x800000, 0x4c7ec427, 3 | BRF_GRA },           //  4 
+	{ "262-c4d.c4",      0x800000, 0x1d237aa6, 3 | BRF_GRA },           //  5 
+	{ "262-c5d.c5",      0x800000, 0xc2256db5, 3 | BRF_GRA },           //  6 
+	{ "262-c6d.c6",      0x800000, 0x8d6565a9, 3 | BRF_GRA },           //  7 
+	{ "262-c7d.c7",      0x800000, 0xd1408776, 3 | BRF_GRA },           //  8 
+	{ "262-c8d.c8",      0x800000, 0x954d0e16, 3 | BRF_GRA },           //  9 
+
+	{ "262-m1d.m1",      0x020000, 0x2fb0a8a5, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "262-v1-08-e0.v1", 0x400000, 0x83d49ecf, 5 | BRF_SND },           // 11 Sound data
+	{ "262-v2-08-e0.v2", 0x400000, 0x003f1843, 5 | BRF_SND },           // 12 
+	{ "262-v3-08-e0.v3", 0x400000, 0x2ae38dbe, 5 | BRF_SND },           // 13 
+	{ "262-v4-08-e0.v4", 0x400000, 0x26ec4dd9, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof2k1nd, kof2k1nd, neogeo)
+STD_ROM_FN(kof2k1nd)
+
+struct BurnDriver BurnDrvkof2k1nd = {
+	"kof2k1nd", "kof2001", "neogeo", NULL, "2001",
+	"The King of Fighters 2001 (Fully Decrypted)\0", NULL, "SNK / Eolith", "Neo Geo AES",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2k1ndRomInfo, kof2k1ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters 2001 (PlayStation 2 Hack)
+
+static struct BurnRomInfo kof2k1ps2RomDesc[] = {
+	{ "262-p1ps2.p1",    0x100000, 0xb5becb3c, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "262-p2ps2.p2",    0x400000, 0x7fc0136f, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "262-c1d.c1",      0x800000, 0x098aeb69, 3 | BRF_GRA },           //  2 Sprite data
+	{ "262-c2d.c2",      0x800000, 0xf9d05d99, 3 | BRF_GRA },           //  3 
+	{ "262-c3d.c3",      0x800000, 0x4c7ec427, 3 | BRF_GRA },           //  4 
+	{ "262-c4d.c4",      0x800000, 0x1d237aa6, 3 | BRF_GRA },           //  5 
+	{ "262-c5d.c5",      0x800000, 0xc2256db5, 3 | BRF_GRA },           //  6 
+	{ "262-c6d.c6",      0x800000, 0x8d6565a9, 3 | BRF_GRA },           //  7 
+	{ "262-c7ps2.c7",    0x800000, 0x85e1c51f, 3 | BRF_GRA },           //  8 
+	{ "262-c8ps2.c8",    0x800000, 0xad2c47db, 3 | BRF_GRA },           //  9 
+
+	{ "262-m1d.m1",      0x020000, 0x2fb0a8a5, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "262-v1-08-e0.v1", 0x400000, 0x83d49ecf, 5 | BRF_SND },           // 11 Sound data
+	{ "262-v2-08-e0.v2", 0x400000, 0x003f1843, 5 | BRF_SND },           // 12 
+	{ "262-v3-08-e0.v3", 0x400000, 0x2ae38dbe, 5 | BRF_SND },           // 13 
+	{ "262-v4-08-e0.v4", 0x400000, 0x26ec4dd9, 5 | BRF_SND },           // 14
+};
+
+STDROMPICKEXT(kof2k1ps2, kof2k1ps2, neogeo)
+STD_ROM_FN(kof2k1ps2)
+
+struct BurnDriver BurnDrvkof2k1ps2 = {
+	"kof2k1ps2", "kof2001", "neogeo", NULL, "2001",
+	"The King of Fighters 2001 (PlayStation 2 Hack)\0", "Hack", "SNK / Eolith", "Neo Geo AES",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2k1ps2RomInfo, kof2k1ps2RomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Metal Slug 4 (Fully Decrypted)
+
+static struct BurnRomInfo mslug4ndRomDesc[] = {
+	{ "263-p1d.p1",  0x100000, 0xc67f5c8d, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "263-p2d.p2",  0x400000, 0xbc3ec89e, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "263-c1d.c1",  0x800000, 0xa75ffcde, 3 | BRF_GRA },           //  2 Sprite data
+	{ "263-c2d.c2",  0x800000, 0x5ab0d12b, 3 | BRF_GRA },           //  3 
+	{ "263-c3d.c3",  0x800000, 0x61af560c, 3 | BRF_GRA },           //  4 
+	{ "263-c4d.c4",  0x800000, 0xf2c544fd, 3 | BRF_GRA },           //  5 
+	{ "263-c5d.c5",  0x800000, 0x84c66c44, 3 | BRF_GRA },           //  6 
+	{ "263-c6d.c6",  0x800000, 0x5ed018ab, 3 | BRF_GRA },           //  7 
+
+	{ "263-m1d.m1",  0x020000, 0xef5db532, 4 | BRF_ESS | BRF_PRG }, //  8 Z80 code
+
+	{ "263-v1d.v1",  0x400000, 0x8cb5a9ef, 5 | BRF_SND },           //  9 Sound data
+	{ "263-v2d.v2",  0x400000, 0x94217b1e, 5 | BRF_SND },           // 10 
+	{ "263-v3d.v3",  0x400000, 0x7616fcec, 5 | BRF_SND },           // 11 
+	{ "263-v4d.v4",  0x400000, 0x7b0b92a1, 5 | BRF_SND },           // 12 
+};
+
+STDROMPICKEXT(mslug4nd, mslug4nd, neogeo)
+STD_ROM_FN(mslug4nd)
+
+struct BurnDriver BurnDrvmslug4nd = {
+	"mslug4nd", "mslug4", "neogeo", NULL, "2002",
+	"Metal Slug 4 (Fully Decrypted)\0", NULL, "Mega", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PLATFORM, FBF_MSLUG,
+	NULL, mslug4ndRomInfo, mslug4ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	mslug3ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Rage of the Dragons (Fully Decrypted)
+
+static struct BurnRomInfo rotdndRomDesc[] = {
+	{ "264-pk1.p1",   0x100000, 0xff2fa719, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "264-pk2.sp2",  0x200000, 0x0df2e112, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "264-c1d.c1",   0x800000, 0xec9d18c0, 3 | BRF_GRA },           //  2 Sprite data
+	{ "264-c2d.c2",   0x800000, 0xb1069066, 3 | BRF_GRA },           //  3 
+	{ "264-c3d.c3",   0x800000, 0x7e636d49, 3 | BRF_GRA },           //  4 
+	{ "264-c4d.c4",   0x800000, 0x76892fda, 3 | BRF_GRA },           //  5 
+	{ "264-c5d.c5",   0x800000, 0x469061bc, 3 | BRF_GRA },           //  6 
+	{ "264-c6d.c6",   0x800000, 0x2200220a, 3 | BRF_GRA },           //  7 
+	{ "264-c7d.c7",   0x800000, 0xedda4baf, 3 | BRF_GRA },           //  8 
+	{ "264-c8d.c8",   0x800000, 0x82b1ba22, 3 | BRF_GRA },           //  9 
+
+	{ "264-m1d.m1",   0x010000, 0x7e06206d, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "264-v1d.v1",   0x400000, 0x5c77a3fe, 5 | BRF_SND },           // 11 Sound data
+	{ "264-v2d.v2",   0x400000, 0xa9b7af14, 5 | BRF_SND },           // 12 
+	{ "264-v3d.v3",   0x400000, 0x17aff92a, 5 | BRF_SND },           // 13 
+	{ "264-v4d.v4",   0x400000, 0xbc6a091e, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(rotdnd, rotdnd, neogeo)
+STD_ROM_FN(rotdnd)
+
+struct BurnDriver BurnDrvrotdnd = {
+	"rotdnd", "rotd", "neogeo", NULL, "2002",
+	"Rage of the Dragons (Fully Decrypted)\0", NULL, "Evoga / Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, rotdndRomInfo, rotdndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Rage of the Dragons (Boss Hack)
+
+static struct BurnRomInfo rotdbhRomDesc[] = {
+	{ "264-p1b.p1",   0x800000, 0x44889313, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "264-c1d.c1",   0x800000, 0xec9d18c0, 3 | BRF_GRA },           //  1 Sprite data
+	{ "264-c2d.c2",   0x800000, 0xb1069066, 3 | BRF_GRA },           //  2 
+	{ "264-c3d.c3",   0x800000, 0x7e636d49, 3 | BRF_GRA },           //  3 
+	{ "264-c4d.c4",   0x800000, 0x76892fda, 3 | BRF_GRA },           //  4 
+	{ "264-c5d.c5",   0x800000, 0x469061bc, 3 | BRF_GRA },           //  5 
+	{ "264-c6d.c6",   0x800000, 0x2200220a, 3 | BRF_GRA },           //  6 
+	{ "264-c7b.c7",   0x800000, 0x2b5c1044, 3 | BRF_GRA },           //  7 
+	{ "264-c8b.c8",   0x800000, 0xf697f287, 3 | BRF_GRA },           //  8 
+
+	{ "264-m1d.m1",   0x010000, 0x7e06206d, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "264-v1d.v1",   0x400000, 0x5c77a3fe, 5 | BRF_SND },           // 10 Sound data
+	{ "264-v2d.v2",   0x400000, 0xa9b7af14, 5 | BRF_SND },           // 11 
+	{ "264-v3d.v3",   0x400000, 0x17aff92a, 5 | BRF_SND },           // 12 
+	{ "264-v4d.v4",   0x400000, 0xbc6a091e, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(rotdbh, rotdbh, neogeo)
+STD_ROM_FN(rotdbh)
+
+struct BurnDriver BurnDrvrotdbh = {
+	"rotdbh", "rotd", "neogeo", NULL, "2002",
+	"Rage of the Dragons (Boss Hack)\0", "Hack", "Evoga / Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, 0,
+	NULL, rotdbhRomInfo, rotdbhRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// The King of Fighters 2002 (Fully Decrypted)
+
+static struct BurnRomInfo kof2k2ndRomDesc[] = {
+	{ "265-p1d.p1",   0x100000, 0xd7a4ef5e, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "265-p2d.p2",   0x400000, 0x8e26868b, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "265-c1d.c1",   0x800000, 0x7efa6ef7, 3 | BRF_GRA },           //  2 Sprite data
+	{ "265-c2d.c2",   0x800000, 0xaa82948b, 3 | BRF_GRA },           //  3 
+	{ "265-c3d.c3",   0x800000, 0x959fad0b, 3 | BRF_GRA },           //  4 
+	{ "265-c4d.c4",   0x800000, 0xefe6a468, 3 | BRF_GRA },           //  5 
+	{ "265-c5d.c5",   0x800000, 0x74bba7c6, 3 | BRF_GRA },           //  6 
+	{ "265-c6d.c6",   0x800000, 0xe20d2216, 3 | BRF_GRA },           //  7 
+	{ "265-c7d.c7",   0x800000, 0x8a5b561c, 3 | BRF_GRA },           //  8 
+	{ "265-c8d.c8",   0x800000, 0xbef667a3, 3 | BRF_GRA },           //  9 
+
+	{ "265-m1d.m1",   0x020000, 0x1c661a4b, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "265-v1d.v1",   0x400000, 0x13d98607, 5 | BRF_SND },           // 11 Sound data
+	{ "265-v2d.v2",   0x400000, 0x9cf74677, 5 | BRF_SND },           // 12 
+	{ "265-v3d.v3",   0x400000, 0x8e9448b5, 5 | BRF_SND },           // 13 
+	{ "265-v4d.v4",   0x400000, 0x067271b5, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof2k2nd, kof2k2nd, neogeo)
+STD_ROM_FN(kof2k2nd)
+
+struct BurnDriver BurnDrvkof2k2nd = {
+	"kof2k2nd", "kof2002", "neogeo", NULL, "2002",
+	"The King of Fighters 2002 (Fully Decrypted)\0", NULL, "Eolith / Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2k2ndRomInfo, kof2k2ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// 拳皇2002 新浪潮闪光版 简化
+
+static struct BurnRomInfo kof2002nwRomDesc[] = {
+	{ "265-p1nw",       0x100000, 0x17c39a9a, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "265-p2nw",       0x400000, 0x70149415, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "265-s1.rom",   0x020000, 0xe0eaaba3, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "265-c2.rom",     0x800000, 0x7efa6ef7, 3 | BRF_GRA },           //  3 Sprite data
+	{ "265-c3.rom",     0x800000, 0xaa82948b, 3 | BRF_GRA },           //  4 
+	{ "265-c4.rom",     0x800000, 0x959fad0b, 3 | BRF_GRA },           //  5 
+	{ "265-c5.rom",     0x800000, 0xefe6a468, 3 | BRF_GRA },           //  6 
+	{ "265-c6.rom",     0x800000, 0x74bba7c6, 3 | BRF_GRA },           //  7 
+	{ "265-c7.rom",     0x800000, 0xe20d2216, 3 | BRF_GRA },           //  8 
+	{ "265-c8.rom",     0x800000, 0x8a5b561c, 3 | BRF_GRA },           //  9 
+	{ "265-c9nw.rom",   0x800000, 0xb42face0, 3 | BRF_GRA },           //  10 
+	{ "265-canw.rom",   0x800000, 0xc8eca592, 3 | BRF_GRA },           //  11
+
+	{ "265-m1.rom",     0x020000, 0xab9d360e, 4 | BRF_ESS | BRF_PRG }, // 12 Z80 code
+
+	{ "265-v1.rom",     0x400000, 0x13d98607, 5 | BRF_SND },           // 13 Sound data
+	{ "265-v2.rom",     0x400000, 0x9cf74677, 5 | BRF_SND },           // 14 
+	{ "265-v3.rom",     0x400000, 0x8e9448b5, 5 | BRF_SND },           // 15
+	{ "265-v4.rom",     0x400000, 0x067271b5, 5 | BRF_SND },           // 16 
+};
+
+STDROMPICKEXT(kof2002nw, kof2002nw, neogeo)
+STD_ROM_FN(kof2002nw)
+
+struct BurnDriver BurnDrvkof2002nw = {
+	"kof2002nw", "kof2002", "neogeo", NULL, "2022",
+	"The King of Fighters 02 Neowave Fiash version (Hack)\0", "Hack", "Eolith / Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2002nwRomInfo, kof2002nwRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// 拳皇2002 无限
+
+static struct BurnRomInfo kof2002mRomDesc[] = {
+	{ "265-p1.bin",   0x100000, 0xade8ac83, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "265-p2.bin",   0x400000, 0x9d02bfad, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "265-s1.bin",   0x020000, 0xe0eaaba3, 2 | BRF_GRA },           //  2 Text layer tiles
+
+	{ "265-c1.bin",   0x800000, 0x7efa6ef7, 3 | BRF_GRA },           //  3 Sprite data
+	{ "265-c2.bin",   0x800000, 0xaa82948b, 3 | BRF_GRA },           //  4 
+	{ "265-c3.bin",   0x800000, 0x959fad0b, 3 | BRF_GRA },           //  5 
+	{ "265-c4.bin",   0x800000, 0xefe6a468, 3 | BRF_GRA },           //  6 
+	{ "265-c5.bin",   0x800000, 0x74bba7c6, 3 | BRF_GRA },           //  7 
+	{ "265-c6.bin",   0x800000, 0xe20d2216, 3 | BRF_GRA },           //  8 
+	{ "265-c7.bin",   0x800000, 0x8a5b561c, 3 | BRF_GRA },           //  9 
+	{ "265-c8.bin",   0x800000, 0xbef667a3, 3 | BRF_GRA },           // 10 
+
+	{ "265-m1.bin",   0x020000, 0xab9d360e, 4 | BRF_ESS | BRF_PRG }, // 11 Z80 code
+
+	{ "265-v1.bin",   0x800000, 0x6e7e3508, 5 | BRF_SND },           // 12 Sound data
+	{ "265-v2.bin",   0x800000, 0x2157b90f, 5 | BRF_SND },           // 13 
+	{ "265-v3.bin",   0x800000, 0x6e7e3508, 5 | BRF_SND },           // 14 Sound data
+	{ "265-v4.bin",   0x800000, 0x2157b90f, 5 | BRF_SND },           // 15 
+};
+
+STDROMPICKEXT(kof2002m, kof2002m, neogeo)
+STD_ROM_FN(kof2002m)
+
+struct BurnDriver BurnDrvkof2002m = {
+	"kof2002m", "kof2002", "neogeo", NULL, "2022",
+	"The King of Fighters 2002 infinite (Hack)\0", "Hack", "Eolith / Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2002mRomInfo, kof2002mRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters 2002 Plus 2017 (2017-12-26, Hack)
+
+static struct BurnRomInfo kf2k2pls2017RomDesc[] = {
+	{ "265-p1ps.p1",  0x100000, 0xbd94702d, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "265-p2ps.p2",  0x500000, 0x76e75315, 1 | BRF_ESS | BRF_PRG }, //  1 
+	{ "265-p3ps.p3",  0x020000, 0x6bfe80b0, 1 | BRF_ESS | BRF_PRG }, //  2 
+
+	{ "265-s1ps.s1",  0x020000, 0x96bdd036, 2 | BRF_GRA },           //  3 Text layer tiles
+
+	{ "265-c1ps.c1",  0x800000, 0x93cf6345, 3 | BRF_GRA },           //  4 Sprite data
+	{ "265-c2ps.c2",  0x800000, 0xd7373d66, 3 | BRF_GRA },           //  5 
+	{ "265-c3d.c3",   0x800000, 0x959fad0b, 3 | BRF_GRA },           //  6 
+	{ "265-c4d.c4",   0x800000, 0xefe6a468, 3 | BRF_GRA },           //  7 
+	{ "265-c5d.c5",   0x800000, 0x74bba7c6, 3 | BRF_GRA },           //  8 
+	{ "265-c6d.c6",   0x800000, 0xe20d2216, 3 | BRF_GRA },           //  9 
+	{ "265-c7d.c7",   0x800000, 0x8a5b561c, 3 | BRF_GRA },           // 10 
+	{ "265-c8d.c8",   0x800000, 0xbef667a3, 3 | BRF_GRA },           // 11 
+
+	{ "265-m1d.m1",   0x020000, 0x1c661a4b, 4 | BRF_ESS | BRF_PRG }, // 12 Z80 code
+
+	{ "265-v1d.v1",   0x400000, 0x13d98607, 5 | BRF_SND },           // 13 Sound data
+	{ "265-v2d.v2",   0x400000, 0x9cf74677, 5 | BRF_SND },           // 14 
+	{ "265-v3d.v3",   0x400000, 0x8e9448b5, 5 | BRF_SND },           // 15 
+	{ "265-v4d.v4",   0x400000, 0x067271b5, 5 | BRF_SND },           // 16 
+};
+
+STDROMPICKEXT(kf2k2pls2017, kf2k2pls2017, neogeo)
+STD_ROM_FN(kf2k2pls2017)
+
+static UINT8 *kf2k2pls2017ExtraROM;
+
+static INT32 kf2k2pls2017Init()
+{
+ 	INT32 nRet = NeoInit();
+
+	if (nRet == 0) {
+		kf2k2pls2017ExtraROM = (UINT8*)BurnMalloc(0x20000);
+
+		if (BurnLoadRom(kf2k2pls2017ExtraROM, 2, 1)) return 1;
+
+		UINT16 *rom = (UINT16*)kf2k2pls2017ExtraROM;
+		for (INT32 i = 0; i < 0x20000/2; i) {
+			if (rom[i] == 0x4e7d) rom[i] = 0x4e71;
+			if (rom[i] == 0x4e7c) rom[i] = 0x4e75;
+		}
+
+		rom[0x0178/2] = 0x4e75;
+
+		rom = (UINT16*)Neo68KROMActive;
+
+		for (INT32 i = 0; i < 0x100000/2; i) {
+			if (rom[i] == 0x4e7d) rom[i] = 0x4e71;
+			if (rom[i] == 0x4e7c) rom[i] = 0x4e75;
+		}
+
+		SekOpen(0);
+		SekMapMemory(kf2k2pls2017ExtraROM, 0x900000, 0x91ffff, MAP_ROM);
+		SekClose();
+	}
+
+	return nRet;
+}
+
+static INT32 kf2k2pls2017Exit()
+{
+	BurnFree (kf2k2pls2017ExtraROM);
+
+	return NeoExit();
+}
+
+struct BurnDriver BurnDrvkf2k2pls2017 = {
+	"kf2k2pls2017", "kof2002", "neogeo", NULL, "2002",
+	"The King of Fighters 2002 Plus 2017 (2017-12-26, Hack)\0", "Hack", "Eolith / Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_KOF,
+	NULL, kf2k2pls2017RomInfo, kf2k2pls2017RomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kf2k2pls2017Init, kf2k2pls2017Exit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Matrimelee (Fully Decrypted)
+
+static struct BurnRomInfo matrimndRomDesc[] = {
+	{ "266-p1d.p1",  0x100000, 0x5d4c2dc7, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "266-p2d.p2",  0x400000, 0xb0132cef, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "266-c1d.c1",  0x800000, 0x0ab54c54, 3 | BRF_GRA },           //  2 Sprite data
+	{ "266-c2d.c2",  0x800000, 0xb834dd89, 3 | BRF_GRA },           //  3 
+	{ "266-c3d.c3",  0x800000, 0xf31d68d4, 3 | BRF_GRA },           //  4 
+	{ "266-c4d.c4",  0x800000, 0x58cfb6e9, 3 | BRF_GRA },           //  5 
+	{ "266-c5d.c5",  0x800000, 0xf3c0e3fd, 3 | BRF_GRA },           //  6 
+	{ "266-c6d.c6",  0x800000, 0xb53c8dcf, 3 | BRF_GRA },           //  7 
+	{ "266-c7d.c7",  0x800000, 0x3c1fb02a, 3 | BRF_GRA },           //  8 
+	{ "266-c8d.c8",  0x800000, 0x5ee31f80, 3 | BRF_GRA },           //  9 
+
+	{ "266-m1d.m1",  0x010000, 0x563428bd, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "266-v1d.v1",  0x400000, 0x435f33cf, 5 | BRF_SND },           // 11 Sound data
+	{ "266-v2d.v2",  0x400000, 0x945f8831, 5 | BRF_SND },           // 12 
+	{ "266-v3d.v3",  0x400000, 0xe8362fcc, 5 | BRF_SND },           // 13 
+	{ "266-v4d.v4",  0x400000, 0x393c9a62, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(matrimnd, matrimnd, neogeo)
+STD_ROM_FN(matrimnd)
+
+struct BurnDriver BurnDrvmatrimnd = {
+	"matrimnd", "matrim", "neogeo", NULL, "2002",
+	"Matrimelee (Fully Decrypted)\0", NULL, "Noise Factory / Atlus", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_PWRINST,
+	NULL, matrimndRomInfo, matrimndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Matrimelee (Boss Hack)
+
+static struct BurnRomInfo matrimdhRomDesc[] = {
+	{ "266-p1b.p1",  0x100000, 0x5f7b6942, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "266-p2d.p2",  0x400000, 0xb0132cef, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "266-c1d.c1",  0x800000, 0x0ab54c54, 3 | BRF_GRA },           //  2 Sprite data
+	{ "266-c2d.c2",  0x800000, 0xb834dd89, 3 | BRF_GRA },           //  3 
+	{ "266-c3d.c3",  0x800000, 0xf31d68d4, 3 | BRF_GRA },           //  4 
+	{ "266-c4d.c4",  0x800000, 0x58cfb6e9, 3 | BRF_GRA },           //  5 
+	{ "266-c5d.c5",  0x800000, 0xf3c0e3fd, 3 | BRF_GRA },           //  6 
+	{ "266-c6d.c6",  0x800000, 0xb53c8dcf, 3 | BRF_GRA },           //  7 
+	{ "266-c7d.c7",  0x800000, 0x3c1fb02a, 3 | BRF_GRA },           //  8 
+	{ "266-c8d.c8",  0x800000, 0x5ee31f80, 3 | BRF_GRA },           //  9 
+
+	{ "266-m1d.m1",  0x010000, 0x563428bd, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "266-v1d.v1",  0x400000, 0x435f33cf, 5 | BRF_SND },           // 11 Sound data
+	{ "266-v2d.v2",  0x400000, 0x945f8831, 5 | BRF_SND },           // 12 
+	{ "266-v3d.v3",  0x400000, 0xe8362fcc, 5 | BRF_SND },           // 13 
+	{ "266-v4d.v4",  0x400000, 0x393c9a62, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(matrimdh, matrimdh, neogeo)
+STD_ROM_FN(matrimdh)
+
+struct BurnDriver BurnDrvmatrimdh = {
+	"matrimdh", "matrim", "neogeo", NULL, "2002",
+	"Matrimelee (Boss Hack)\0", "Hack", "Noise Factory / Atlus", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_PWRINST,
+	NULL, matrimdhRomInfo, matrimdhRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 320, 224, 4, 3
+};
+
+// Pochi and Nyaa (Fully Decrypted)
+
+static struct BurnRomInfo pnyaandRomDesc[] = {
+	{ "267-p1d.p1",  0x080000, 0x400fd762, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "267-c1d.c1",  0x800000, 0x75fa4f27, 3 | BRF_GRA },           //  1 Sprite data
+	{ "267-c2d.c2",  0x800000, 0x02345689, 3 | BRF_GRA },           //  2 
+
+	{ "267-m1d.m1",  0x020000, 0xc13895b9, 4 | BRF_ESS | BRF_PRG }, //  3 Z80 code
+
+	{ "267-v1d.v1",  0x400000, 0x1ac7db71, 5 | BRF_SND },           //  4 Sound data
+};
+
+STDROMPICKEXT(pnyaand, pnyaand, neogeo)
+STD_ROM_FN(pnyaand)
+
+struct BurnDriver BurnDrvpnyaand = {
+	"pnyaand", "pnyaa", "neogeo", NULL, "2003",
+	"Pochi and Nyaa (Fully Decrypted)\0", NULL, "Aiky / Taito", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PUZZLE, 0,
+	NULL, pnyaandRomInfo, pnyaandRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Metal Slug 5 (Fully Decrypted)
+
+static struct BurnRomInfo mslug5ndRomDesc[] = {
+	{ "268-p1d.p1",   0x100000, 0x92ad7047, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "268-p2d.p2",   0x400000, 0x768ee64a, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "268-c1d.c1",   0x800000, 0xe8239365, 3 | BRF_GRA },           //  2 Sprite data
+	{ "268-c2d.c2",   0x800000, 0x89b21d4c, 3 | BRF_GRA },           //  3 
+	{ "268-c3d.c3",   0x800000, 0x3cda13a0, 3 | BRF_GRA },           //  4 
+	{ "268-c4d.c4",   0x800000, 0x9c00160d, 3 | BRF_GRA },           //  5 
+	{ "268-c5d.c5",   0x800000, 0x38754256, 3 | BRF_GRA },           //  6 
+	{ "268-c6d.c6",   0x800000, 0x59d33e9c, 3 | BRF_GRA },           //  7 
+	{ "268-c7d.c7",   0x800000, 0xc9f8c357, 3 | BRF_GRA },           //  8 
+	{ "268-c8d.c8",   0x800000, 0xfafc3eb9, 3 | BRF_GRA },           //  9 
+
+	{ "268-m1d.m1",   0x010000, 0x45a7b351, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "268-v1d.v1",   0x400000, 0xf61daa9e, 5 | BRF_SND },           // 11 Sound data
+	{ "268-v2d.v2",   0x400000, 0xeeb7c926, 5 | BRF_SND },           // 12 
+	{ "268-v3d.v3",   0x400000, 0x02fd519e, 5 | BRF_SND },           // 13 
+	{ "268-v4d.v4",   0x400000, 0xd7c67794, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(mslug5nd, mslug5nd, neogeo)
+STD_ROM_FN(mslug5nd)
+
+struct BurnDriver BurnDrvmslug5nd = {
+	"mslug5nd", "mslug5", "neogeo", NULL, "2003",
+	"Metal Slug 5 (Fully Decrypted)\0", NULL, "SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_PLATFORM, FBF_MSLUG,
+	NULL, mslug5ndRomInfo, mslug5ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// SNK vs. Capcom - SVC Chaos (Fully Decrypted)
+
+static struct BurnRomInfo svcndRomDesc[] = {
+	{ "269-p1d.p1",   0x600000, 0xc3b1b4b7, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "269-c1d.c1",   0x800000, 0x465d473b, 3 | BRF_GRA },           //  1 Sprite data
+	{ "269-c2d.c2",   0x800000, 0x3eb28f78, 3 | BRF_GRA },           //  2 
+	{ "269-c3d.c3",   0x800000, 0xf4d4ab2b, 3 | BRF_GRA },           //  3 
+	{ "269-c4d.c4",   0x800000, 0xa69d523a, 3 | BRF_GRA },           //  4 
+	{ "269-c5d.c5",   0x800000, 0xba2a7892, 3 | BRF_GRA },           //  5 
+	{ "269-c6d.c6",   0x800000, 0x37371ca1, 3 | BRF_GRA },           //  6 
+	{ "269-c7d.c7",   0x800000, 0xd8418412, 3 | BRF_GRA },           //  7 
+	{ "269-c8d.c8",   0x800000, 0xe327a78c, 3 | BRF_GRA },           //  8 
+
+	{ "269-m1d.m1",   0x020000, 0x447b3123, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "269-v1d.v1",   0x400000, 0x5eb6c8ab, 5 | BRF_SND },           // 10 Sound data
+	{ "269-v2d.v2",   0x400000, 0x1cbe5aa6, 5 | BRF_SND },           // 11 
+	{ "269-v3d.v3",   0x400000, 0xf6267114, 5 | BRF_SND },           // 12 
+	{ "269-v4d.v4",   0x400000, 0x40d3ba59, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(svcnd, svcnd, neogeo)
+STD_ROM_FN(svcnd)
+
+struct BurnDriver BurnDrvsvcnd = {
+	"svcnd", "svc", "neogeo", NULL, "2003",
+	"SNK vs. Capcom - SVC Chaos (Fully Decrypted)\0", NULL, "SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_KOF | FBF_SF,
+	NULL, svcndRomInfo, svcndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// SNK vs. Capcom - SVC Chaos (PlayStation 2 Hack)
+
+static struct BurnRomInfo svcndps2RomDesc[] = {
+	{ "269-p1ps2.p1", 0x600000, 0x2b11751d, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "269-c1d.c1",   0x800000, 0x465d473b, 3 | BRF_GRA },           //  1 Sprite data
+	{ "269-c2d.c2",   0x800000, 0x3eb28f78, 3 | BRF_GRA },           //  2 
+	{ "269-c3d.c3",   0x800000, 0xf4d4ab2b, 3 | BRF_GRA },           //  3 
+	{ "269-c4d.c4",   0x800000, 0xa69d523a, 3 | BRF_GRA },           //  4 
+	{ "269-c5d.c5",   0x800000, 0xba2a7892, 3 | BRF_GRA },           //  5 
+	{ "269-c6d.c6",   0x800000, 0x37371ca1, 3 | BRF_GRA },           //  6 
+	{ "269-c7ps2.c7", 0x800000, 0xbfe9c5f6, 3 | BRF_GRA },           //  7 
+	{ "269-c8ps2.c8", 0x800000, 0x75f2f88c, 3 | BRF_GRA },           //  8 
+
+	{ "269-m1d.m1",   0x020000, 0x447b3123, 4 | BRF_ESS | BRF_PRG }, //  9 Z80 code
+
+	{ "269-v1d.v1",   0x400000, 0x5eb6c8ab, 5 | BRF_SND },           // 10 Sound data
+	{ "269-v2d.v2",   0x400000, 0x1cbe5aa6, 5 | BRF_SND },           // 11 
+	{ "269-v3d.v3",   0x400000, 0xf6267114, 5 | BRF_SND },           // 12
+	{ "269-v4d.v4",   0x400000, 0x40d3ba59, 5 | BRF_SND },           // 13 
+};
+
+STDROMPICKEXT(svcndps2, svcndps2, neogeo)
+STD_ROM_FN(svcndps2)
+
+struct BurnDriver BurnDrvsvcndps2 = {
+	"svcndps2", "svc", "neogeo", NULL, "2003",
+	"SNK vs. Capcom - SVC Chaos (PlayStation 2 Hack)\0", "Hack", "SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_KOF | FBF_SF,
+	NULL, svcndps2RomInfo, svcndps2RomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Samurai Shodown V (Fully Decrypted)
+
+static struct BurnRomInfo samsho5ndRomDesc[] = {
+	{ "270-p1d.p1",  0x400000, 0x3fcae9e7, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "270-p2d.p2",  0x400000, 0x91979dee, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "270-c1d.c1",  0x800000, 0x9adec562, 3 | BRF_GRA },           //  2 Sprite data
+	{ "270-c2d.c2",  0x800000, 0xac0309e5, 3 | BRF_GRA },           //  3 
+	{ "270-c3d.c3",  0x800000, 0x82db9dae, 3 | BRF_GRA },           //  4 
+	{ "270-c4d.c4",  0x800000, 0xf8041153, 3 | BRF_GRA },           //  5 
+	{ "270-c5d.c5",  0x800000, 0xe689d62d, 3 | BRF_GRA },           //  6 
+	{ "270-c6d.c6",  0x800000, 0xa993bdcf, 3 | BRF_GRA },           //  7 
+	{ "270-c7d.c7",  0x800000, 0x707d56a0, 3 | BRF_GRA },           //  8 
+	{ "270-c8d.c8",  0x800000, 0xf5903adc, 3 | BRF_GRA },           //  9 
+
+	{ "270-m1d.m1",  0x020000, 0x8afd2b46, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "270-v1d.v1",  0x400000, 0x240c6742, 5 | BRF_SND },           // 11 Sound data
+	{ "270-v2d.v2",  0x400000, 0x7d096473, 5 | BRF_SND },           // 12 
+	{ "270-v3d.v3",  0x400000, 0x980e4cc7, 5 | BRF_SND },           // 13 
+	{ "270-v4d.v4",  0x400000, 0xf8fd316f, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(samsho5nd, samsho5nd, neogeo)
+STD_ROM_FN(samsho5nd)
+
+struct BurnDriver BurnDrvsamsho5nd = {
+	"samsho5nd", "samsho5", "neogeo", NULL, "2003",
+	"Samurai Shodown V (Fully Decrypted)\0", NULL, "Yuki Enterprise / SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, samsho5ndRomInfo, samsho5ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Samurai Shodown V (Boss Hack)
+
+static struct BurnRomInfo samsh5ndbRomDesc[] = {
+	{ "270-p1b.p1",  0x400000, 0x85f15550, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "270-p2d.p2",  0x400000, 0x91979dee, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "270-c1d.c1",  0x800000, 0x9adec562, 3 | BRF_GRA },           //  2 Sprite data
+	{ "270-c2d.c2",  0x800000, 0xac0309e5, 3 | BRF_GRA },           //  3 
+	{ "270-c3d.c3",  0x800000, 0x82db9dae, 3 | BRF_GRA },           //  4 
+	{ "270-c4d.c4",  0x800000, 0xf8041153, 3 | BRF_GRA },           //  5 
+	{ "270-c5d.c5",  0x800000, 0xe689d62d, 3 | BRF_GRA },           //  6 
+	{ "270-c6d.c6",  0x800000, 0xa993bdcf, 3 | BRF_GRA },           //  7 
+	{ "270-c7b.c7",  0x800000, 0x02914b0b, 3 | BRF_GRA },           //  8 
+	{ "270-c8b.c8",  0x800000, 0xe874ac8b, 3 | BRF_GRA },           //  9 
+
+	{ "270-m1d.m1",  0x020000, 0x8afd2b46, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "270-v1d.v1",  0x400000, 0x240c6742, 5 | BRF_SND },           // 11 Sound data
+	{ "270-v2d.v2",  0x400000, 0x7d096473, 5 | BRF_SND },           // 12 
+	{ "270-v3d.v3",  0x400000, 0x980e4cc7, 5 | BRF_SND },           // 13 
+	{ "270-v4d.v4",  0x400000, 0xf8fd316f, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(samsh5ndb, samsh5ndb, neogeo)
+STD_ROM_FN(samsh5ndb)
+
+struct BurnDriver BurnDrvsamsh5ndb = {
+	"samsh5ndb", "samsho5", "neogeo", NULL, "2003",
+	"Samurai Shodown V (Boss Hack)\0", "Hack", "Yuki Enterprise / SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, samsh5ndbRomInfo, samsh5ndbRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// The King of Fighters 2003 (Fully Decrypted)
+
+static struct BurnRomInfo kof2k3ndRomDesc[] = {
+	{ "271-p1d.p1",   0x800000, 0x4899d569, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+
+	{ "271-s1d.s1",   0x080000, 0x85f47910, 2 | BRF_GRA },           //  1 Text layer tiles
+
+	{ "271-c1d.c1",   0x800000, 0xe42fc226, 3 | BRF_GRA },           //  2 Sprite data
+	{ "271-c2d.c2",   0x800000, 0x1b5e3b58, 3 | BRF_GRA },           //  3 
+	{ "271-c3d.c3",   0x800000, 0xd334fdd9, 3 | BRF_GRA },           //  4 
+	{ "271-c4d.c4",   0x800000, 0x0d457699, 3 | BRF_GRA },           //  5 
+	{ "271-c5d.c5",   0x800000, 0x8a91aae4, 3 | BRF_GRA },           //  6 
+	{ "271-c6d.c6",   0x800000, 0x9f8674b8, 3 | BRF_GRA },           //  7 
+	{ "271-c7d.c7",   0x800000, 0x84b4ecd7, 3 | BRF_GRA },           //  8 
+	{ "271-c8d.c8",   0x800000, 0xaca7f22d, 3 | BRF_GRA },           //  9 
+
+	{ "271-m1d.m1",   0x020000, 0xcdd67d4d, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "271-v1d.v1",   0x400000, 0xdba0b938, 5 | BRF_SND },           // 11 Sound data
+	{ "271-v2d.v2",   0x400000, 0x71956ee2, 5 | BRF_SND },           // 12 
+	{ "271-v3d.v3",   0x400000, 0xddbbb199, 5 | BRF_SND },           // 13 
+	{ "271-v4d.v4",   0x400000, 0x01b90c4f, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(kof2k3nd, kof2k3nd, neogeo)
+STD_ROM_FN(kof2k3nd)
+
+struct BurnDriver BurnDrvkof2k3nd = {
+	"kof2k3nd", "kof2003", "neogeo", NULL, "2003",
+	"The King of Fighters 2003 (Fully Decrypted)\0", NULL, "SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_KOF,
+	NULL, kof2k3ndRomInfo, kof2k3ndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	NeoInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
+
+// Samurai Shodown V Special (Fully Decrypted)
+
+static struct BurnRomInfo ssh5spndRomDesc[] = {
+	{ "272-p1d.p1",   0x400000, 0xd0814aa8, 1 | BRF_ESS | BRF_PRG }, //  0 68K code
+	{ "272-p2d.p2",   0x400000, 0xda770f06, 1 | BRF_ESS | BRF_PRG }, //  1 
+
+	{ "272-c1d.c1",   0x800000, 0x8548097e, 3 | BRF_GRA },           //  2 Sprite data
+	{ "272-c2d.c2",   0x800000, 0x8c1b48d0, 3 | BRF_GRA },           //  3 
+	{ "272-c3d.c3",   0x800000, 0x96ddb28c, 3 | BRF_GRA },           //  4 
+	{ "272-c4d.c4",   0x800000, 0x99ef7a0a, 3 | BRF_GRA },           //  5 
+	{ "272-c5d.c5",   0x800000, 0x772e8b1e, 3 | BRF_GRA },           //  6 
+	{ "272-c6d.c6",   0x800000, 0x5fff21fc, 3 | BRF_GRA },           //  7 
+	{ "272-c7d.c7",   0x800000, 0x9ac56a0e, 3 | BRF_GRA },           //  8 
+	{ "272-c8d.c8",   0x800000, 0xcfde7aff, 3 | BRF_GRA },           //  9 
+
+	{ "272-m1d.m1",   0x020000, 0x0b5d4d6a, 4 | BRF_ESS | BRF_PRG }, // 10 Z80 code
+
+	{ "272-v1d.v1",   0x400000, 0x4d1b252b, 5 | BRF_SND },           // 11 Sound data
+	{ "272-v2d.v2",   0x400000, 0x0e46d2f8, 5 | BRF_SND },           // 12 
+	{ "272-v3d.v3",   0x400000, 0x3f0f7554, 5 | BRF_SND },           // 13 
+	{ "272-v4d.v4",   0x400000, 0xad8fabb4, 5 | BRF_SND },           // 14 
+};
+
+STDROMPICKEXT(ssh5spnd, ssh5spnd, neogeo)
+STD_ROM_FN(ssh5spnd)
+
+struct BurnDriver BurnDrvssh5spnd = {
+	"ssh5spnd", "samsh5sp", "neogeo", NULL, "2004",
+	"Samurai Shodown V Special (Fully Decrypted)\0", NULL, "Yuki Enterprise / SNK Playmore", "Neo Geo MVS",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 2, HARDWARE_PREFIX_CARTRIDGE | HARDWARE_SNK_NEOGEO | HARDWARE_SNK_ALTERNATE_TEXT, GBF_VSFIGHT, FBF_SAMSHO,
+	NULL, ssh5spndRomInfo, ssh5spndRomName, NULL, NULL, NULL, NULL, neogeoInputInfo, neogeoDIPInfo,
+	kof99ndInit, NeoExit, NeoFrame, NeoRender, NeoScan, &NeoRecalcPalette,
+	0x1000, 304, 224, 4, 3
+};
--- a/src/burn/drv/pgm/d_pgm.cpp	2022-01-17 20:49:38.000000000 +0800
+++ b/src/burn/drv/pgm/d_pgm.cpp	2022-03-07 14:37:44.477805840 +0800
@@ -8506,3 +8506,106 @@
	kov2107Init, pgmExit, pgmFrame, pgmDraw, pgmScan, &nPgmPalRecalc, 0x900,
	448, 224, 4, 3
-};
+};
+
+//============================================================
+// Add Hack Roms patch
+//============================================================
+
+// 三国战纪 六剑传奇 2015 (Hack)
+
+static struct BurnRomInfo kovplus6RomDesc[] = {
+	{ "p0600.119",     		0x0751ce8, 0x1b9d9073, 1 | BRF_PRG | BRF_ESS }, //  0 68K Code
+
+	{ "pgm_t0600.rom",     	0x0800000, 0x6459e292, 2 | BRF_GRA },		//  1 Tile data
+	
+	{ "pgm_a0600.rom",     	0x0800000, 0xb64be5d6, 3 | BRF_GRA },		//  2 Sprite Color Data
+	{ "pgm_a0601.rom",   	0x0800000, 0xff7a4373, 3 | BRF_GRA },		//  3
+	{ "pgm_a0602.rom",     	0x0800000, 0xe7a32959, 3 | BRF_GRA },		//  4
+	{ "pgm_a0603.rom",     	0x0400000, 0xec31abda, 3 | BRF_GRA },		//  5
+	
+	{ "pgm_b0600.rom",     	0x0800000, 0x759b172f, 4 | BRF_GRA },		//  6 Sprite Masks & Color Indexes
+	{ "pgm_b0601.rom",     	0x0400000, 0xa0bb1c2f, 4 | BRF_GRA },		//  7
+	
+	{ "pgm_m0600.rom",     	0x0400000, 0x3ada4fd6, 5 | BRF_SND },		//  8 Samples
+	
+	{ "kov_igs027a.bin", 	0x0004000, 0x00000000, 7 | BRF_PRG | BRF_ESS | BRF_NODUMP },  //  9 Internal ARM7 Rom
+};
+
+STDROMPICKEXT(kovplus6, kovplus6, pgm)
+STD_ROM_FN(kovplus6)
+
+struct BurnDriver BurnDrvkovplus6 = {
+	"kovplus6", "kovplus", "pgm", NULL, "2015",
+	"三国战纪 六剑传奇 2015 (Hack)\0", "no PLUS on screen when set to KOREA", "IGS", "PolyGameMaster",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 4, HARDWARE_IGS_PGM, GBF_SCRFIGHT, 0,
+	NULL, kovplus6RomInfo, kovplus6RomName, NULL, NULL, NULL, NULL, pgmInputInfo, kovassgaDIPInfo,
+	kovInit, pgmExit, pgmFrame, pgmDraw, pgmScan, &nPgmPalRecalc, 0x900,
+	448, 224, 4, 3
+};
+
+// 三国战纪 六剑传奇 2016 (Hack)
+
+static struct BurnRomInfo kovplus2016emRomDesc[] = {
+	{ "p0600.119",     		0x0751ce8, 0xff1dad51, 1 | BRF_PRG | BRF_ESS }, //  0 68K Code
+
+	{ "pgm_t0600.rom",     	0x0800000, 0x92b89388, 2 | BRF_GRA },		//  1 Tile data
+	
+	{ "pgm_a0600.rom",     	0x0800000, 0x098cd614, 3 | BRF_GRA },		//  2 Sprite Color Data
+	{ "pgm_a0601.rom",   	0x0800000, 0xff7a4373, 3 | BRF_GRA },		//  3
+	{ "pgm_a0602.rom",     	0x0800000, 0xefb30f14, 3 | BRF_GRA },		//  4
+	{ "pgm_a0603.rom",     	0x0400000, 0xec31abda, 3 | BRF_GRA },		//  5
+	
+	{ "pgm_b0600.rom",     	0x0800000, 0xb3691ed3, 4 | BRF_GRA },		//  6 Sprite Masks & Color Indexes
+	{ "pgm_b0601.rom",     	0x0400000, 0xf43e4276, 4 | BRF_GRA },		//  7
+	
+	{ "pgm_m0600.rom",     	0x0400000, 0x3ada4fd6, 5 | BRF_SND },		//  8 Samples
+	
+	{ "kov_igs027a.bin", 	0x0004000, 0x00000000, 7 | BRF_PRG | BRF_ESS | BRF_NODUMP },  //  9 Internal ARM7 Rom
+};
+
+STDROMPICKEXT(kovplus2016em, kovplus2016em, pgm)
+STD_ROM_FN(kovplus2016em)
+
+struct BurnDriver BurnDrvkovplus2016em = {
+	"kovplus2016em", "kovplus", "pgm", NULL, "2016",
+	"三国战纪 六剑传奇 2016 (Hack)\0", "no PLUS on screen when set to KOREA", "IGS", "PolyGameMaster",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HACK, 4, HARDWARE_IGS_PGM, GBF_SCRFIGHT, 0,
+	NULL, kovplus2016emRomInfo, kovplus2016emRomName, NULL, NULL, NULL, NULL, pgmInputInfo, kovassgaDIPInfo,
+	kovInit, pgmExit, pgmFrame, pgmDraw, pgmScan, &nPgmPalRecalc, 0x900,
+	448, 224, 4, 3
+};
+
+// 三国战记115二锅头整合优化完美版
+
+static struct BurnRomInfo kov115egtRomDesc[] = {
+	{ "p0600.115",     			0x0400000, 0xef7c64bb, 1 | BRF_PRG | BRF_ESS }, //  0 68K Code
+
+	{ "pgm_t0600.u11",     		0x0800000, 0x4acc1ad6, 2 | BRF_GRA },	//  1 Tile data
+	
+	{ "pgm_a0600.u2",     			0x0800000, 0xd8167834, 3 | BRF_GRA },			//  2 Sprite Color Data
+	{ "pgm_a0601.u4",     			0x0800000, 0xff7a4373, 3 | BRF_GRA },			//  3
+	{ "pgm_a0602.u6",     			0x0800000, 0xe7a32959, 3 | BRF_GRA },			//  4
+	{ "pgm_a0603.u9",     			0x0400000, 0xec31abda, 3 | BRF_GRA },			//  5
+	
+	{ "pgm_b0600.u5",     			0x0800000, 0x7d3cd059, 4 | BRF_GRA },			//  6 Sprite Masks & Color Indexes
+	{ "pgm_b0601.u7",     			0x0400000, 0xa0bb1c2f, 4 | BRF_GRA },			//  7
+	
+	{ "pgm_m0600.u3",     			0x0400000, 0x3ada4fd6, 5 | BRF_SND },			//  8 Samples
+	
+	{ "kov_igs027a.bin", 			0x0004000, 0x00000000, 7 | BRF_PRG | BRF_ESS | BRF_NODUMP },	//  9 Internal ARM7 Rom
+};
+
+STDROMPICKEXT(kov115egt, kov115egt, pgm)
+STD_ROM_FN(kov115egt)
+
+struct BurnDriver BurnDrvkov115egt = {
+	"kov115egt", "kov", "pgm", NULL, "1999",
+	"Knights of Valour - Sangoku Senki (V115)\0", NULL, "IGS", "PolyGameMaster",
+	L"Knights of Valour\0\u4E09\u56FD\u6226\u7D00\0\u4E09\u56FD\u6218\u7EAA (V115)\0", NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE, 4, HARDWARE_IGS_PGM/* | HARDWARE_IGS_USE_ARM_CPU*/, GBF_SCRFIGHT, 0,
+	NULL, kov115egtRomInfo, kov115egtRomName, NULL, NULL, NULL, NULL, pgmInputInfo, kov115DIPInfo,
+	kovInit, pgmExit, pgmFrame, pgmDraw, pgmScan, &nPgmPalRecalc, 0x900,
+	448, 224, 4, 3
+};
--- a/src/burn/drv/capcom/d_cps2.cpp	2022-01-16 17:43:00.000000000 +0800
+++ b/src/burn/drv/capcom/d_cps2.cpp	2022-04-02 18:02:22.283166600 +0800
@@ -6491,6 +6491,37 @@
 STD_ROM_PICK(Sfz3ar1)
 STD_ROM_FN(Sfz3ar1)
 
+static struct BurnRomInfo sfz3mixRomDesc[] = {
+	{ "sfz3mix.03",        0x080000, 0xe6747e9b, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.04",        0x080000, 0x4ef3bbe9, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.05",        0x080000, 0xbaa534fc, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.06",        0x080000, 0xe85ca573, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.07",        0x080000, 0xf53a20d8, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.08",        0x080000, 0x3bd7d2d4, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.09",        0x080000, 0x1a93bd2d, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+	{ "sfz3mix.10",        0x080000, 0x8c75a221, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
+
+	{ "sfz3mix.13m",       0x400000, 0x1b5fc5f9, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.15m",       0x400000, 0x4f9de2d9, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.17m",       0x400000, 0x1fdd472e, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.19m",       0x400000, 0x646a311f, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.14m",       0x400000, 0xe96ce6cc, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.16m",       0x400000, 0xb15d2507, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.18m",       0x400000, 0xb52f88f3, CPS2_GFX | BRF_GRA },
+	{ "sfz3mix.20m",       0x400000, 0x8c7b3fa3, CPS2_GFX | BRF_GRA },
+
+	{ "sz3.01",            0x020000, 0xde810084, CPS2_PRG_Z80 | BRF_ESS | BRF_PRG },
+	{ "sz3.02",            0x020000, 0x72445dc4, CPS2_PRG_Z80 | BRF_ESS | BRF_PRG },
+
+	{ "sz3.11m",           0x400000, 0x1c89eed1, CPS2_QSND | BRF_SND },
+	{ "sz3.12m",           0x400000, 0xf392b13a, CPS2_QSND | BRF_SND },
+	
+	{ "phoenix.key",       0x000014, 0x2cf772b0, CPS2_ENCRYPTION_KEY },
+};
+
+STD_ROM_PICK(sfz3mix)
+STD_ROM_FN(sfz3mix)
+
 static struct BurnRomInfo Sfz3jRomDesc[] = {
 	{ "sz3j.03c",      0x080000, 0xcadf4a51, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
 	{ "sz3j.04c",      0x080000, 0xfcb31228, CPS2_PRG_68K | BRF_ESS | BRF_PRG },
@@ -11080,6 +11111,16 @@
 	Cps2Init, DrvExit, Cps2Frame, CpsRedraw, CpsAreaScan,
 	&CpsRecalcPal, 0x1000, 384, 224, 4, 3
 };
+
+struct BurnDriver BurnDrvCpssfz3mix = {
+	"sfz3mix", "sfa3", NULL, NULL, "2022",
+	"Street Fighter Zero 3 (mix)\0", NULL, "Capcom", "CPS2",
+	NULL, NULL, NULL, NULL,
+	BDF_GAME_WORKING | BDF_CLONE | BDF_HISCORE_SUPPORTED | BDF_HACK, 2, HARDWARE_CAPCOM_CPS2, GBF_VSFIGHT, FBF_SF,
+	NULL, sfz3mixRomInfo, sfz3mixRomName, NULL, NULL, NULL, NULL, Cps2FightingInputInfo, NULL,
+	Cps2Init, DrvExit, Cps2Frame, CpsRedraw, CpsAreaScan,
+	&CpsRecalcPal, 0x1000, 384, 224, 4, 3
+};
 
 struct BurnDriver BurnDrvCpsSfz3j = {
 	"sfz3j", "sfa3", NULL, NULL, "1998",