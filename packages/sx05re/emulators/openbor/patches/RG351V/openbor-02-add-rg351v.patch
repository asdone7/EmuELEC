diff --git a/engine/Makefile b/engine/Makefile
index 8b0f9a65..8d15c0c4 100644
--- a/engine/Makefile
+++ b/engine/Makefile
@@ -103,6 +103,48 @@ BUILD_DEBUG     = 1
 endif
 endif
 
+ifdef BUILD_LINUX_arm
+TARGET 	        = $(VERSION_NAME).elf
+TARGET_FINAL    = $(VERSION_NAME)
+TARGET_PLATFORM = LINUX
+BUILD_LINUX     = 1
+BUILD_SDL       = 1
+BUILD_GFX       = 1
+BUILD_PTHREAD   = 1
+BUILD_SDL_IO    = 1
+BUILD_VORBIS    = 1
+BUILD_WEBM      = 1
+BUILD_RG351V    = 1
+BUILDING        = 1
+INCLUDES        = $(SDKPATH)/usr/include \
+                  $(SDKPATH)/usr/include/SDL2
+OBJTYPE         = elf
+LIBRARIES       = $(SDKPATH)/usr/lib
+# Workaround for GCC 9
+CFLAGS          += -Wno-error=format-overflow -Wno-error=stringop-truncation -Wno-error=implicit-function-declaration -Wno-error=unused-variable -Wno-error=unused-label
+endif
+
+ifdef BUILD_LINUX_aarch64
+TARGET 	        = $(VERSION_NAME).elf
+TARGET_FINAL    = $(VERSION_NAME)
+TARGET_PLATFORM = LINUX
+BUILD_LINUX     = 1
+BUILD_SDL       = 1
+BUILD_GFX       = 1
+BUILD_PTHREAD   = 1
+BUILD_SDL_IO    = 1
+BUILD_VORBIS    = 1
+BUILD_WEBM      = 1
+BUILD_RG351V    = 1
+BUILDING        = 1
+INCLUDES        = $(SDKPATH)/usr/include \
+                  $(SDKPATH)/usr/include/SDL2
+OBJTYPE         = elf
+LIBRARIES       = $(SDKPATH)/usr/lib
+# Workaround for GCC 9
+CFLAGS          += -Wno-error=format-overflow -Wno-error=stringop-truncation -Wno-error=implicit-function-declaration -Wno-error=unused-variable -Wno-error=unused-label
+endif
+
 ifdef BUILD_DARWIN
 TARGET          = $(VERSION_NAME).elf
 TARGET_FINAL    = $(VERSION_NAME)
@@ -195,7 +237,7 @@ ifdef BUILD_WIN
 STRIP 	        = $(WINDEV)/$(PREFIX)strip$(EXTENSION) $(TARGET) -o $(TARGET_FINAL)
 endif
 ifdef BUILD_LINUX
-STRIP 	        = $(LNXDEV)/$(PREFIX)strip $(TARGET) -o $(TARGET_FINAL)
+STRIP 	        = $(PREFIX)-strip $(TARGET) -o $(TARGET_FINAL)
 endif
 ifdef BUILD_DARWIN
 STRIP           = $(PREFIX)strip $(TARGET) -o $(TARGET_FINAL)
@@ -541,6 +583,11 @@ CFLAGS 	       += -DWEBM
 endif
 
 
+ifdef BUILD_RG351V
+CFLAGS 	       += -DRG351V
+endif
+
+
 CXXFLAGS        = $(CFLAGS) -fno-exceptions -fno-rtti
 ASFLAGS         = $(CFLAGS)
 
diff --git a/engine/sdl/control.c b/engine/sdl/control.c
index 9e353bc7..3de251b9 100644
--- a/engine/sdl/control.c
+++ b/engine/sdl/control.c
@@ -950,6 +950,13 @@ void control_rumble(int port, int ratio, int msec)
 {
     #if SDL
     if (joystick[port] != NULL && joystick_haptic[port] != NULL) {
+        #ifdef RG351V
+        if (strcmp(joysticks[port].Name, "OpenSimHardware OSH PB Controller") == false) 
+        {
+            if (msec == 0) return;
+            msec *= 10;
+        }
+        #endif
         if(SDL_HapticRumblePlay(joystick_haptic[port], ratio, msec) != 0)
         {
             //printf( "Warning: Unable to play rumble! %s\n", SDL_GetError() );
diff --git a/engine/sdl/menu.c b/engine/sdl/menu.c
index c42e9395..7f03b7b5 100644
--- a/engine/sdl/menu.c
+++ b/engine/sdl/menu.c
@@ -460,6 +460,9 @@ static void initMenu(int type)
 	bpp = 32;
 	savedata.hwscale = 0.0f;
 #endif
+#ifdef RG351V
+	isWide = 0;
+#endif
 
 	pixelformat = PIXEL_x8;
 
@@ -473,6 +476,11 @@ static void initMenu(int type)
 	videomodes.vScale = 2.0f;
 	savedata.hwscale = 2.0f;
 	savedata.hwfilter = 1;
+#endif
+#ifdef RG351V
+	videomodes.hScale = 2.0f;
+	videomodes.vScale = 2.0f;
+	savedata.hwscale = 2.0f;
 #endif
 	vscreen = allocscreen(videomodes.hRes, videomodes.vRes, PIXEL_32);
 
